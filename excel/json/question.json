[
  {
    "id": 0,
    "question": "计算2024年7月份居民消费价格的平均同比涨跌幅。",
    "concepts": ["summary statistics"],
    "constraints": "使用 pandas 计算“同比涨跌幅”列在2024年7月的平均值，保留两位小数。",
    "format": "@mean_yoy_change[value]，其中“value”为保留两位小数的浮点数。",
    "file_name": "1-1.xlsx",
    "level": "easy"
  },
  {
    "id": 1,
    "question": "计算2024年7月份居民消费价格的平均环比涨跌幅。",
    "concepts": ["summary statistics"],
    "constraints": "使用 pandas 计算“环比涨跌幅”列在2024年7月的平均值，保留两位小数。",
    "format": "@mean_mom_change[value]，其中“value”为保留两位小数的浮点数。",
    "file_name": "1-1.xlsx",
    "level": "easy"
  },
  {
    "id": 2,
    "question": "2024年7月份农村居民消费价格与去年相比的百分比变化是多少？",
    "concepts": ["comparison"],
    "constraints": "使用 pandas 计算“农村”对应的同比涨跌幅，保留两位小数。",
    "format": "@percentage_change[value]，其中“value”为保留两位小数的浮点数。",
    "file_name": "1-1.xlsx",
    "level": "medium"
  },
  {
    "id": 3,
    "question": "2024年城市居民消费价格相较2023年整体涨跌幅是多少？",
    "concepts": ["comparison"],
    "constraints": "使用 pandas 计算“城市”在2024年和2023年之间的整体百分比变化，保留两位小数。",
    "format": "@percentage_change[value]，其中“value”为保留两位小数的浮点数。",
    "file_name": "1-1.xlsx",
    "level": "medium"
  },
  {
    "id": 4,
    "question": "计算所有人事部门员工的平均薪资。",
    "concepts": ["Summary Statistics"],
    "constraints": "使用 pandas 计算“人事”部门的‘薪资’平均值，保留两位小数。",
    "format": "@mean_salary[value]，其中 value 为浮点数，保留两位小数。",
    "file_name": "1-2.xlsx",
    "level": "easy"
  },
  {
    "id": 5,
    "question": "财务部门员工的总数是多少？",
    "concepts": ["Count", "Filter"],
    "constraints": "使用 pandas 筛选‘财务’部门员工并统计总数。",
    "format": "@total_employees_in_finance[value]，其中 value 是整数。",
    "file_name": "1-2.xlsx",
    "level": "easy"
  },
  {
    "id": 6,
    "question": "查找薪资最高的员工。",
    "concepts": ["Max", "Lookup"],
    "constraints": "使用 pandas 找出‘薪资’最高的员工并返回姓名。",
    "format": "@highest_salary_employee[name]，其中 name 是字符串。",
    "file_name": "1-2.xlsx",
    "level": "medium"
  },
  {
    "id": 7,
    "question": "计算人事部门员工的平均绩效评分。",
    "concepts": ["Summary Statistics"],
    "constraints": "使用 pandas 计算“人事”部门‘绩效评分’的平均值，保留两位小数。",
    "format": "@mean_performance_score[value]，其中 value 为浮点数，保留两位小数。",
    "file_name": "1-2.xlsx",
    "level": "easy"
  },
   {
    "id": 8,
    "question": "计算2023年所有地区的平均收入。",
    "concepts": ["Summary Statistics"],
    "constraints": "使用 pandas 计算‘2023年’列的平均值，保留两位小数。",
    "format": "@mean_income_2023[value]，其中 value 为浮点数，保留两位小数。",
    "file_name": "1-3.xlsx",
    "level": "easy"
  },
  {
    "id": 9,
    "question": "找出2023年收入最高的地区。",
    "concepts": ["Max", "Lookup"],
    "constraints": "使用 pandas 找出‘2023年’列中值最大的‘地区’。",
    "format": "@max_income_region_2023[name]，其中 name 是字符串。",
    "file_name": "1-3.xlsx",
    "level": "medium"
  },
  {
    "id": 10,
    "question": "北京市2023年相较于2022年收入增长了多少百分比？",
    "concepts": ["Growth Rate"],
    "constraints": "计算北京市2023年和2022年之间的增长率，结果保留两位小数。",
    "format": "@bj_income_growth_2023[value]，其中 value 为浮点数，保留两位小数。",
    "file_name": "1-3.xlsx",
    "level": "medium"
  },
  {
    "id": 11,
    "question": "哪一年河北省的收入首次超过30000元？",
    "concepts": ["Threshold", "Filter"],
    "constraints": "判断河北省在哪一年的收入首次超过30000元。",
    "format": "@first_year_hebei_above_30k[year]，其中 year 为字符串年份。",
    "file_name": "1-3.xlsx",
    "level": "medium"
  },
  {
    "id": 12,
    "question": "计算所有销售记录的总销售金额。",
    "concepts": ["Aggregation"],
    "constraints": "使用 pandas 计算‘总金额’列的总和，结果保留两位小数。",
    "format": "@total_sales[value]，其中 value 为浮点数，保留两位小数。",
    "file_name": "1-4.xlsx",
    "level": "easy"
  },
  {
    "id": 13,
    "question": "促销销售的平均销售金额是多少？",
    "concepts": ["Summary Statistics", "Filter"],
    "constraints": "筛选‘是否促销’为‘是’的数据，计算‘总金额’平均值，保留两位小数。",
    "format": "@promo_avg_sales[value]，其中 value 为浮点数，保留两位小数。",
    "file_name": "1-4.xlsx",
    "level": "medium"
  },
  {
    "id": 14,
    "question": "哪个产品ID的总销售金额最高？",
    "concepts": ["Group By", "Max"],
    "constraints": "按‘产品ID’汇总‘总金额’，找出总金额最大的产品ID。",
    "format": "@top_sales_product_id[ID]，其中 ID 是字符串。",
    "file_name": "1-4.xlsx",
    "level": "medium"
  },
  {
    "id": 15,
    "question": "非促销情况下的总销售量是多少？",
    "concepts": ["Filter", "Aggregation"],
    "constraints": "筛选‘是否促销’为‘否’的数据，求‘销售量’之和。",
    "format": "@non_promo_total_quantity[value]，其中 value 为整数。",
    "file_name": "1-4.xlsx",
    "level": "easy"
  },
  {
    "id": 16,
    "question": "所有物品的平均实际报价是多少？",
    "concepts": ["Summary Statistics"],
    "constraints": "计算‘实际报价(元)’的平均值，保留两位小数。",
    "format": "@avg_actual_quote[value]，其中 value 为浮点数，保留两位小数。",
    "file_name": "1-5.xlsx",
    "level": "easy"
  },
  {
    "id": 17,
    "question": "有多少申请单的实际报价高于预算？",
    "concepts": ["Comparison", "Count"],
    "constraints": "统计‘实际报价(元)’大于‘预算(元)’的记录数量。",
    "format": "@over_budget_count[value]，其中 value 是整数。",
    "file_name": "1-5.xlsx",
    "level": "easy"
  },
  {
    "id": 18,
    "question": "京东提供的最贵商品的实际报价是多少？",
    "concepts": ["Filter", "Max"],
    "constraints": "筛选供应商为‘京东’的记录，找出‘实际报价(元)’的最大值。",
    "format": "@jd_max_price[value]，其中 value 为浮点数。",
    "file_name": "1-5.xlsx",
    "level": "medium"
  },
  {
    "id": 19,
    "question": "所有已批准申请的总预算是多少？",
    "concepts": ["Filter", "Aggregation"],
    "constraints": "筛选‘审批状态’为‘已批准’的记录，求‘预算(元)’总和，保留两位小数。",
    "format": "@approved_total_budget[value]，其中 value 为浮点数。",
    "file_name": "1-5.xlsx",
    "level": "medium"
  },
  {
    "id": 20,
    "question": "所有员工的加班总天数是多少？",
    "concepts": ["Aggregation"],
    "constraints": "求‘加班’列的总和，忽略缺失值，保留两位小数。",
    "format": "@total_overtime_days[value]，其中 value 为浮点数。",
    "file_name": "1-6.xlsx",
    "level": "easy"
  },
  {
    "id": 21,
    "question": "北京分公司的员工总迟到次数是多少？",
    "concepts": ["Filter", "Aggregation"],
    "constraints": "筛选‘公司’为‘北京分公司’，计算‘迟到次数’的总和。",
    "format": "@beijing_late_total[value]，其中 value 为整数。",
    "file_name": "1-6.xlsx",
    "level": "medium"
  },
  {
    "id": 22,
    "question": "哪位员工的旷工次数最多？",
    "concepts": ["Max", "Filter"],
    "constraints": "找出‘旷工’列中值最大的员工姓名。",
    "format": "@max_absent_employee[name]，其中 name 为字符串。",
    "file_name": "1-6.xlsx",
    "level": "medium"
  },
  {
    "id": 23,
    "question": "有多少员工请了假（请假天数不为0）？",
    "concepts": ["Filter", "Count"],
    "constraints": "统计‘请假天数’大于0的记录数量。",
    "format": "@leave_count[value]，其中 value 为整数。",
    "file_name": "1-6.xlsx",
    "level": "easy"
  },
  {
    "id": 24,
    "question": "一共收到了多少条‘严重’的问题反馈？",
    "concepts": ["Filter", "Count"],
    "constraints": "筛选‘问题严重性’为‘严重’，统计其记录条数。",
    "format": "@severe_issue_count[value]，其中 value 为整数。",
    "file_name": "1-7.xlsx",
    "level": "easy"
  },
  {
    "id": 25,
    "question": "客户的平均满意度是多少？",
    "concepts": ["Summary Statistics"],
    "constraints": "计算‘客户满意度’列的平均值，保留两位小数。",
    "format": "@avg_satisfaction[value]，其中 value 为浮点数。",
    "file_name": "1-7.xlsx",
    "level": "easy"
  },
  {
    "id": 26,
    "question": "‘物流部’负责处理了多少条客户反馈？",
    "concepts": ["Filter", "Count"],
    "constraints": "筛选‘责任部门’为‘物流部’，统计反馈数量。",
    "format": "@logistics_feedback_count[value]，其中 value 为整数。",
    "file_name": "1-7.xlsx",
    "level": "easy"
  },
  {
    "id": 27,
    "question": "所有状态为‘待处理’的反馈中，满意度最低的是哪位客户？",
    "concepts": ["Filter", "Min"],
    "constraints": "筛选‘处理状态’为‘待处理’，找出‘客户满意度’最低的‘客户ID’。",
    "format": "@lowest_pending_customer[customer_id]，其中 customer_id 为字符串。",
    "file_name": "1-7.xlsx",
    "level": "medium"
  },
  {
    "id": 28,
    "question": "所有月份的访问人气总和是多少？",
    "concepts": ["Aggregation"],
    "constraints": "对‘访问人气’列求和。",
    "format": "@total_visitors[value]，其中 value 为整数。",
    "file_name": "1-8.xlsx",
    "level": "easy"
  },
  {
    "id": 29,
    "question": "哪一个月份的浏览热度最高？",
    "concepts": ["Max"],
    "constraints": "找出‘浏览热度’最高值对应的‘月份’。",
    "format": "@max_browse_month[value]，其中 value 为整数。",
    "file_name": "1-8.xlsx",
    "level": "easy"
  },
  {
    "id": 30,
    "question": "平均收藏人气是多少？",
    "concepts": ["Summary Statistics"],
    "constraints": "计算‘收藏人气’的平均值，保留两位小数。",
    "format": "@avg_favorite_popularity[value]，其中 value 为浮点数。",
    "file_name": "1-8.xlsx",
    "level": "easy"
  },
  {
    "id": 31,
    "question": "哪一个月份的加购热度最低？",
    "concepts": ["Min"],
    "constraints": "找出‘加购热度’最低值对应的‘月份’。",
    "format": "@min_cart_month[value]，其中 value 为整数。",
    "file_name": "1-8.xlsx",
    "level": "medium"
  },
  {
    "id": 32,
    "question": "所有货物的总重量是多少（千克）？",
    "concepts": ["Aggregation"],
    "constraints": "对‘重量（千克）’列求和，保留两位小数。",
    "format": "@total_weight[value]，其中 value 为浮点数。",
    "file_name": "1-9.xlsx",
    "level": "easy"
  },
  {
    "id": 33,
    "question": "使用空运运输的货物有多少件？",
    "concepts": ["Filter", "Count"],
    "constraints": "筛选‘运输方式’为‘空运’，统计数量。",
    "format": "@air_shipment_count[value]，其中 value 为整数。",
    "file_name": "1-9.xlsx",
    "level": "easy"
  },
  {
    "id": 34,
    "question": "当前状态为“已签收”的货物数量是多少？",
    "concepts": ["Filter", "Count"],
    "constraints": "筛选‘状态’为‘已签收’的数据，统计其数量。",
    "format": "@signed_count[value]，其中 value 为整数。",
    "file_name": "1-9.xlsx",
    "level": "easy"
  },
  {
    "id": 35,
    "question": "哪位收货人接收了重量最大的货物？",
    "concepts": ["Max"],
    "constraints": "找出‘重量（千克）’最大的那一行，对应的‘收货人’。",
    "format": "@heaviest_receiver[name]，其中 name 为字符串。",
    "file_name": "1-9.xlsx",
    "level": "medium"
  },
  {
    "id": 36,
    "question": "所有订单的商品总数量是多少？",
    "concepts": ["Aggregation"],
    "constraints": "对‘订单数量’列求和。",
    "format": "@total_order_quantity[value]，其中 value 为整数。",
    "file_name": "2-1.xlsx",
    "level": "easy"
  },
  {
    "id": 37,
    "question": "有多少订单是“退货”状态？",
    "concepts": ["Filter", "Count"],
    "constraints": "筛选‘退货/换货状态’为‘退货’的数据，统计其数量。",
    "format": "@return_order_count[value]，其中 value 为整数。",
    "file_name": "2-1.xlsx",
    "level": "easy"
  },
  {
    "id": 38,
    "question": "哪一个客户下的订单数量最多？",
    "concepts": ["GroupBy", "Max"],
    "constraints": "按‘客户名称’分组后统计‘订单数量’，找出最大值对应的客户。",
    "format": "@top_customer[name]，其中 name 为字符串。",
    "file_name": "2-1.xlsx",
    "level": "medium"
  },
  {
    "id": 39,
    "question": "总共有多少种不同的退货/换货原因？",
    "concepts": ["Distinct", "Count"],
    "constraints": "统计‘退货/换货原因’列中非空值的唯一项数量。",
    "format": "@unique_return_reasons[value]，其中 value 为整数。",
    "file_name": "2-1.xlsx",
    "level": "easy"
  },
  {
    "id": 40,
    "question": "总得分的平均值是多少？",
    "concepts": ["Summary Statistics"],
    "constraints": "使用 pandas 计算‘得分’列的平均值，保留两位小数。",
    "format": "@average_score[value]，其中 value 为浮点数。",
    "file_name": "2-2.xlsx",
    "level": "easy"
  },
  {
    "id": 41,
    "question": "哪位学生的校次排名最低（最靠前）？",
    "concepts": ["Min", "Lookup"],
    "constraints": "找到‘校次’最小的学生对应的‘姓名’。",
    "format": "@top_school_rank_student[value]，其中 value 是姓名字符串。",
    "file_name": "2-2.xlsx",
    "level": "easy"
  },
  {
    "id": 42,
    "question": "哪位学生的客观题得分最高？",
    "concepts": ["Max", "Lookup"],
    "constraints": "找出‘客观题得分’最高的学生对应的‘姓名’。",
    "format": "@top_objective_score_student[value]，其中 value 是姓名。",
    "file_name": "2-2.xlsx",
    "level": "easy"
  },
  {
    "id": 43,
    "question": "班级排名为第1的学生有多少人？",
    "concepts": ["Count", "Filter"],
    "constraints": "统计‘班级排名’为1的学生数量。",
    "format": "@top_class_rank_count[value]，其中 value 为整数。",
    "file_name": "2-2.xlsx",
    "level": "easy"
  },
  {
    "id": 44,
    "question": "收现的平均值是多少？",
    "concepts": ["Summary Statistics"],
    "constraints": "使用 pandas 计算‘收现’列的平均值，保留两位小数。",
    "format": "@average_cash[value]，其中 value 为浮点数。",
    "file_name": "2-3.xlsx",
    "level": "easy"
  },
  {
    "id": 45,
    "question": "哪辆车的收现金额最高？",
    "concepts": ["Max", "Lookup"],
    "constraints": "找出‘收现’最大对应的‘车号’。",
    "format": "@top_cash_vehicle[value]，其中 value 是车号字符串。",
    "file_name": "2-3.xlsx",
    "level": "easy"
  },
  {
    "id": 46,
    "question": "哪个单位的车辆数量最多？",
    "concepts": ["Frequency", "Mode"],
    "constraints": "统计‘单位’列中出现次数最多的单位。",
    "format": "@most_common_unit[value]，其中 value 是单位字符串。",
    "file_name": "2-3.xlsx",
    "level": "easy"
  },
  {
    "id": 47,
    "question": "车型为“挂车”的车辆共有多少辆？",
    "concepts": ["Count", "Filter"],
    "constraints": "筛选‘车型’为“挂车”的行并统计数量。",
    "format": "@trailer_count[value]，其中 value 为整数。",
    "file_name": "2-3.xlsx",
    "level": "easy"
  },
  {
    "id": 48,
    "question": "员工的平均实发工资是多少？",
    "concepts": ["Summary Statistics"],
    "constraints": "使用 pandas 计算‘实发工资’列的平均值，保留两位小数。",
    "format": "@average_net_salary[value]，其中 value 为浮点数。",
    "file_name": "2-4.xlsx",
    "level": "easy"
  },
  {
    "id": 49,
    "question": "实发工资最高的员工是谁？",
    "concepts": ["Max", "Lookup"],
    "constraints": "找出‘实发工资’最大值对应的‘姓名’。",
    "format": "@top_net_salary_employee[value]，其中 value 是姓名。",
    "file_name": "2-4.xlsx",
    "level": "easy"
  },
  {
    "id": 50,
    "question": "财务部共有多少位员工？",
    "concepts": ["Count", "Filter"],
    "constraints": "筛选‘部门’为“财务部”的行并统计数量。",
    "format": "@finance_department_count[value]，其中 value 为整数。",
    "file_name": "2-4.xlsx",
    "level": "easy"
  },
  {
    "id": 51,
    "question": "所有员工应发工资的总和是多少？",
    "concepts": ["Aggregate", "Sum"],
    "constraints": "求‘应发工资’列的总和，保留两位小数。",
    "format": "@total_gross_salary[value]，其中 value 为浮点数。",
    "file_name": "2-4.xlsx",
    "level": "easy"
  },
  {
    "id": 52,
    "question": "所有资产的当前平均价值是多少？",
    "concepts": ["Summary Statistics"],
    "constraints": "使用 pandas 计算‘当前价值’列的平均值，保留两位小数。",
    "format": "@average_asset_value[value]，其中 value 为浮点数。",
    "file_name": "2-5.xlsx",
    "level": "easy"
  },
  {
    "id": 53,
    "question": "当前价值最高的资产编号是什么？",
    "concepts": ["Max", "Lookup"],
    "constraints": "找出‘当前价值’最大对应的‘资产编号’。",
    "format": "@most_valuable_asset[value]，其中 value 是资产编号。",
    "file_name": "2-5.xlsx",
    "level": "easy"
  },
  {
    "id": 54,
    "question": "打印机类型的资产共有多少件？",
    "concepts": ["Count", "Filter"],
    "constraints": "筛选‘资产名称’为“打印机”的行并统计数量。",
    "format": "@printer_count[value]，其中 value 为整数。",
    "file_name": "2-5.xlsx",
    "level": "easy"
  },
  {
    "id": 55,
    "question": "所有资产的总当前价值是多少？",
    "concepts": ["Aggregate", "Sum"],
    "constraints": "使用 pandas 计算‘当前价值’的总和，保留两位小数。",
    "format": "@total_asset_value[value]，其中 value 为浮点数。",
    "file_name": "2-5.xlsx",
    "level": "easy"
  },
  {
    "id": 56,
    "question": "所有广告的平均点击率是多少？",
    "concepts": ["Summary Statistics"],
    "constraints": "使用 pandas 计算‘点击率CTR’列的平均值，保留四位小数。",
    "format": "@average_ctr[value]，其中 value 为小数。",
    "file_name": "2-6.xlsx",
    "level": "easy"
  },
  {
    "id": 57,
    "question": "转化率最高的广告名称是什么？",
    "concepts": ["Max", "Lookup"],
    "constraints": "找出‘转化率’最大对应的‘广告名称’。",
    "format": "@top_conversion_ad[value]，其中 value 是广告名称。",
    "file_name": "2-6.xlsx",
    "level": "easy"
  },
  {
    "id": 58,
    "question": "所有广告的平均每点击成本（CPC）是多少？",
    "concepts": ["Average", "Cost"],
    "constraints": "计算‘成本每点击CPC’列的平均值，保留两位小数。",
    "format": "@average_cpc[value]，其中 value 为浮点数。",
    "file_name": "2-6.xlsx",
    "level": "easy"
  },
  {
    "id": 59,
    "question": "投放平台为微博的广告有多少个？",
    "concepts": ["Count", "Filter"],
    "constraints": "筛选‘投放平台’为“微博”的行数。",
    "format": "@weibo_ad_count[value]，其中 value 为整数。",
    "file_name": "2-6.xlsx",
    "level": "easy"
  },
  {
    "id": 60,
    "question": "所有会议的平均参会人数是多少？",
    "concepts": ["Summary Statistics"],
    "constraints": "使用 pandas 计算‘参会人数’列的平均值，保留两位小数。",
    "format": "@average_participants[value]，其中 value 为浮点数。",
    "file_name": "2-7.xlsx",
    "level": "easy"
  },
  {
    "id": 61,
    "question": "参会人数最多的会议室是哪一个？",
    "concepts": ["Max", "Lookup"],
    "constraints": "找出‘参会人数’最大对应的‘会议室’。",
    "format": "@most_popular_room[value]，其中 value 为会议室名称。",
    "file_name": "2-7.xlsx",
    "level": "easy"
  },
  {
    "id": 62,
    "question": "周一的预约会议有多少个？",
    "concepts": ["Filter", "Count"],
    "constraints": "统计‘时间段’包含“周一”的预约行数。",
    "format": "@monday_meeting_count[value]，其中 value 为整数。",
    "file_name": "2-7.xlsx",
    "level": "easy"
  },
  {
    "id": 63,
    "question": "预约人名中包含“强”的有多少位？",
    "concepts": ["String Match", "Count"],
    "constraints": "筛选‘预约人’列中包含“强”的唯一人数。",
    "format": "@qiang_person_count[value]，其中 value 为整数。",
    "file_name": "2-7.xlsx",
    "level": "easy"
  },
  {
    "id": 64,
    "question": "所有拜访的平均预计成交额是多少？",
    "concepts": ["Summary Statistics"],
    "constraints": "使用 pandas 计算‘预计成交额(万)’列的平均值，保留两位小数。",
    "format": "@average_expected_deal[value]，其中 value 为浮点数。",
    "file_name": "2-8.xlsx",
    "level": "easy"
  },
  {
    "id": 65,
    "question": "哪位客户被拜访的次数最多？",
    "concepts": ["Frequency", "Mode"],
    "constraints": "统计‘客户名称’出现次数最多的名称。",
    "format": "@top_visited_client[value]，其中 value 为客户名称。",
    "file_name": "2-8.xlsx",
    "level": "easy"
  },
  {
    "id": 66,
    "question": "客户等级为 A 的客户有多少位？",
    "concepts": ["Filter", "Count"],
    "constraints": "筛选‘客户等级’为“A”的唯一客户数。",
    "format": "@a_grade_client_count[value]，其中 value 为整数。",
    "file_name": "2-8.xlsx",
    "level": "easy"
  },
  {
    "id": 67,
    "question": "预计成交额最高的一笔拜访是哪位客户？",
    "concepts": ["Max", "Lookup"],
    "constraints": "找出‘预计成交额(万)’最大对应的‘客户名称’。",
    "format": "@top_deal_client[value]，其中 value 为客户名称。",
    "file_name": "2-8.xlsx",
    "level": "easy"
  },
   {
    "id": 68,
    "question": "所有员工的平均总薪资是多少？",
    "concepts": ["Summary Statistics"],
    "constraints": "使用 pandas 计算‘总薪资’列的平均值，保留两位小数。",
    "format": "@average_salary[value]，其中 value 为浮点数。",
    "file_name": "2-9.xlsx",
    "level": "easy"
  },
  {
    "id": 69,
    "question": "博士学历的员工有多少位？",
    "concepts": ["Filter", "Count"],
    "constraints": "筛选‘学历’为“博士”的员工数量。",
    "format": "@phd_employee_count[value]，其中 value 为整数。",
    "file_name": "2-9.xlsx",
    "level": "easy"
  },
  {
    "id": 70,
    "question": "总薪资最高的员工是谁？",
    "concepts": ["Max", "Lookup"],
    "constraints": "找出‘总薪资’列中最大值对应的‘姓名’。",
    "format": "@top_salary_employee[value]，其中 value 为姓名。",
    "file_name": "2-9.xlsx",
    "level": "easy"
  },
  {
    "id": 71,
    "question": "谁是入职时间最早的员工？",
    "concepts": ["Min", "Date"],
    "constraints": "找出‘入职日期’最早的‘工号’。",
    "format": "@earliest_employee_id[value]，其中 value 为工号。",
    "file_name": "2-9.xlsx",
    "level": "easy"
  },
  {
    "id": 72,
    "question": "学校共有多少名教职工？",
    "concepts": ["Count"],
    "constraints": "统计数据表中教职工的总人数。",
    "format": "@total_teachers[value]，其中 value 为整数。",
    "file_name": "3-1.xlsx",
    "level": "easy"
  },
  {
    "id": 73,
    "question": "工学院共有多少名教职工？",
    "concepts": ["Filter", "Count"],
    "constraints": "筛选‘所属院系’为“工学院”的记录数量。",
    "format": "@engineering_faculty_count[value]，其中 value 为整数。",
    "file_name": "3-1.xlsx",
    "level": "easy"
  },
  {
    "id": 74,
    "question": "入职最早的教职工是谁？",
    "concepts": ["Min", "Date"],
    "constraints": "找出‘入职时间’最早的‘姓名’。",
    "format": "@earliest_teacher_name[value]，其中 value 为姓名。",
    "file_name": "3-1.xlsx",
    "level": "easy"
  },
  {
    "id": 75,
    "question": "学校有多少名女教职工？",
    "concepts": ["Filter", "Count"],
    "constraints": "筛选‘性别’为“女”的记录数量。",
    "format": "@female_teacher_count[value]，其中 value 为整数。",
    "file_name": "3-1.xlsx",
    "level": "easy"
  },
   {
    "id": 76,
    "question": "高三(一)班共有多少名学生？",
    "concepts": ["Count"],
    "constraints": "统计总行数表示学生总数。",
    "format": "@total_students[value]，其中 value 为整数。",
    "file_name": "3-2.xlsx",
    "level": "easy"
  },
  {
    "id": 77,
    "question": "高三(一)班学生的数学平均分是多少？",
    "concepts": ["Summary Statistics"],
    "constraints": "使用 pandas 计算‘数学’列的平均值，保留 2 位小数。",
    "format": "@average_math_score[value]，其中 value 为浮点数。",
    "file_name": "3-2.xlsx",
    "level": "easy"
  },
  {
    "id": 78,
    "question": "哪位同学语文成绩满分？",
    "concepts": ["Filter", "Condition"],
    "constraints": "筛选语文成绩为 150 的学生姓名。",
    "format": "@full_score_chinese[value]，其中 value 为用英文逗号分隔的姓名字符串。",
    "file_name": "3-2.xlsx",
    "level": "medium"
  },
  {
    "id": 79,
    "question": "哪位学生的英语成绩最高？",
    "concepts": ["Max", "Filter"],
    "constraints": "找出‘英语’列最大值对应的学生姓名。",
    "format": "@top_english_student[value]，其中 value 为姓名。",
    "file_name": "3-2.xlsx",
    "level": "easy"
  },
  {
    "id": 80,
    "question": "高三一班学生一模总分平均是多少？",
    "concepts": ["Summary Statistics"],
    "constraints": "使用 pandas 计算‘一模总分’列的平均值，保留 2 位小数。",
    "format": "@average_total_score[value]，其中 value 为浮点数。",
    "file_name": "3-3.xlsx",
    "level": "easy"
  },
  {
    "id": 81,
    "question": "哪位学生作文分数最高？",
    "concepts": ["Max", "Filter"],
    "constraints": "找出‘作文’列最大值对应的学生学号。",
    "format": "@top_composition_student_id[value]，其中 value 为学号。",
    "file_name": "3-3.xlsx",
    "level": "easy"
  },
  {
    "id": 82,
    "question": "谁的英语成绩最低？",
    "concepts": ["Min", "Filter"],
    "constraints": "从‘英语’列提取数字，无法提取则视为0，找出最低分对应的学号。",
    "format": "@lowest_english_student_id[value]，其中 value 为学号。",
    "file_name": "3-3.xlsx",
    "level": "medium"
  },
 {
    "id": 83,
    "question": "哪个员工迟到次数最多？",
    "concepts": ["GroupBy", "Count", "Max"],
    "constraints": "按‘工号’分组统计迟到次数，返回迟到最多的员工工号。",
    "format": "@most_late_employee_id[value]，其中 value 为工号。",
    "file_name": "3-4.xlsx",
    "level": "medium"
  },
  {
    "id": 84,
    "question": "哪个员工出勤正常次数最多？",
    "concepts": ["GroupBy", "Count", "Max"],
    "constraints": "统计‘考勤状态’为‘正常’的次数，并找出最多者。",
    "format": "@most_normal_attendance_id[value]，其中 value 为工号。",
    "file_name": "3-4.xlsx",
    "level": "medium"
  },
  {
    "id": 85,
    "question": "一共有多少名员工参与了考勤？",
    "concepts": ["Unique Count"],
    "constraints": "统计‘工号’字段中不同员工的数量。",
    "format": "@unique_employee_count[value]，其中 value 为员工数量。",
    "file_name": "3-4.xlsx",
    "level": "easy"
  },
  {
    "id": 86,
    "question": "哪个员工的总薪酬最高？",
    "concepts": ["Max", "Row Selection"],
    "constraints": "找出‘总薪酬’最高的员工ID。",
    "format": "@max_total_salary_employee_id[value]，其中 value 是员工ID。",
    "file_name": "3-5.xlsx",
    "level": "easy"
  },
  {
    "id": 87,
    "question": "员工的平均绩效评分是多少？",
    "concepts": ["Mean", "Rounding"],
    "constraints": "计算‘绩效评分’字段的平均值，保留两位小数。",
    "format": "@mean_performance_score[value]，其中 value 是浮点数。",
    "file_name": "3-5.xlsx",
    "level": "easy"
  },
  {
    "id": 88,
    "question": "哪个部门的请假天数最多？",
    "concepts": ["GroupBy", "Sum", "Max"],
    "constraints": "按部门统计请假天数总和，找出最多的部门。",
    "format": "@department_most_leaves[value]，其中 value 是部门名。",
    "file_name": "3-5.xlsx",
    "level": "medium"
  },
  {
    "id": 89,
    "question": "有多少员工的培训次数高于平均水平？",
    "concepts": ["Mean", "Filtering", "Count"],
    "constraints": "找出‘培训次数’大于平均值的员工数量。",
    "format": "@above_avg_training_count[value]，其中 value 是整数。",
    "file_name": "3-5.xlsx",
    "level": "medium"
  },
  {
    "id": 90,
    "question": "第一季度中哪个月份的总费用最高？",
    "concepts": ["Max", "Aggregation"],
    "constraints": "对1月、2月、3月三列求和，找出最大值对应的月份。",
    "format": "@max_month_q1[value]，其中 value 是月份名称。",
    "file_name": "3-6.xlsx",
    "level": "easy"
  },
  {
    "id": 91,
    "question": "“人力费用”在全年总共花费了多少？",
    "concepts": ["Filtering", "Sum"],
    "constraints": "提取“人力费用”一行，计算其1月到12月的总和。",
    "format": "@annual_expense_hr[value]，其中 value 是浮点数，保留两位小数。",
    "file_name": "3-6.xlsx",
    "level": "easy"
  },
  {
    "id": 92,
    "question": "哪个费用类别的全年开销最大？",
    "concepts": ["Row-wise Sum", "Max"],
    "constraints": "每行从1月到12月求和，找出和最大的“费用类别”。",
    "format": "@max_expense_category[value]，其中 value 是费用类别名称。",
    "file_name": "3-6.xlsx",
    "level": "medium"
  },
  {
    "id": 93,
    "question": "第一季度总费用是多少？",
    "concepts": ["Quarter Total", "Sum"],
    "constraints": "对所有费用类别的1月到3月列求和，保留两位小数。",
    "format": "@q1_total_expense[value]，其中 value 是浮点数，保留两位小数。",
    "file_name": "3-6.xlsx",
    "level": "easy"
  },
  {
    "id": 94,
    "question": "客户名称中包含“张”的客户有多少个订单？",
    "concepts": ["文本匹配", "计数"],
    "constraints": "在“客户”列中筛选包含“张”字的记录，计算其数量。",
    "format": "@count_customers_with_zhang[value]，其中 value 是整数。",
    "file_name": "3-7.xlsx",
    "level": "easy"
  },
  {
    "id": 95,
    "question": "待收款总额大于应收总额的订单数是多少？",
    "concepts": ["条件筛选", "比较运算"],
    "constraints": "筛选待收款总额 > 应收总额的订单记录数量。",
    "format": "@count_overdue_orders[value]，其中 value 是整数。",
    "file_name": "3-7.xlsx",
    "level": "medium"
  },
  {
    "id": 96,
    "question": "已收款总额为 0 的订单比例是多少？",
    "concepts": ["条件统计", "百分比"],
    "constraints": "统计已收款为0的订单数，占总订单数量的百分比，保留两位小数。",
    "format": "@zero_payment_ratio[value]，其中 value 是百分比浮点数。",
    "file_name": "3-7.xlsx",
    "level": "medium"
  },
  {
    "id": 97,
    "question": "订单总额的平均值是多少？",
    "concepts": ["平均值", "汇总"],
    "constraints": "计算订单总额的平均值，保留两位小数。",
    "format": "@average_order_amount[value]，其中 value 是浮点数，保留两位小数。",
    "file_name": "3-7.xlsx",
    "level": "easy"
  },
  {
    "id": 98,
    "question": "所有订单的总金额是多少？",
    "concepts": ["汇总计算"],
    "constraints": "对“订单金额”列求和，保留两位小数。",
    "format": "@total_order_amount[value]，其中 value 是浮点数。",
    "file_name": "3-8.xlsx",
    "level": "easy"
  },
  {
    "id": 99,
    "question": "支付方式为“信用卡”的订单总数是多少？",
    "concepts": ["条件计数"],
    "constraints": "筛选支付方式为“信用卡”的订单，计算其数量。",
    "format": "@credit_card_orders[value]，其中 value 是整数。",
    "file_name": "3-8.xlsx",
    "level": "easy"
  },
  {
    "id": 100,
    "question": "订单状态为“已退款”的订单总金额是多少？",
    "concepts": ["条件求和"],
    "constraints": "筛选“订单状态”为“已退款”的订单，对其“订单金额”求和。",
    "format": "@refunded_order_total[value]，其中 value 是浮点数。",
    "file_name": "3-8.xlsx",
    "level": "medium"
  },
  {
    "id": 101,
    "question": "购买数量最多的一笔订单购买了多少件商品？",
    "concepts": ["排序筛选"],
    "constraints": "对“数量”列进行降序排序，返回最大值。",
    "format": "@max_quantity[value]，其中 value 是整数。",
    "file_name": "3-8.xlsx",
    "level": "easy"
  },
  {
    "id": 102,
    "question": "平均基本工资是多少？",
    "concepts": ["平均值计算"],
    "constraints": "使用 pandas 计算“基本工资”列的平均值，保留两位小数。",
    "format": "@average_base_salary[value]，其中 value 是浮点数。",
    "file_name": "3-9.xlsx",
    "level": "easy"
  },
  {
    "id": 103,
    "question": "员工中最年长的是多少岁？",
    "concepts": ["最大值筛选"],
    "constraints": "获取“年龄”列中的最大值。",
    "format": "@oldest_employee_age[value]，其中 value 是整数。",
    "file_name": "3-9.xlsx",
    "level": "easy"
  },
  {
    "id": 104,
    "question": "市场部的平均基本工资是多少？",
    "concepts": ["条件平均值"],
    "constraints": "筛选“部门”为“市场部”的记录，对“基本工资”列求平均值，保留两位小数。",
    "format": "@avg_salary_marketing[value]，其中 value 是浮点数。",
    "file_name": "3-9.xlsx",
    "level": "medium"
  },
  {
    "id": 105,
    "question": "各部门员工人数分别是多少？",
    "concepts": ["分组计数"],
    "constraints": "对“部门”列分组，统计每个部门的员工人数。",
    "format": "@department_counts[{'部门1': n1, '部门2': n2, ...}]",
    "file_name": "3-9.xlsx",
    "level": "medium"
  },
  {
    "id": 106,
    "question": "计算所有航班的平均起飞延误时间（分钟）。",
    "concepts": ["时间处理", "数据统计"],
    "constraints": "使用 pandas 计算 '实际起飞' 与 '计划起飞' 的平均时间差（分钟），保留两位小数。",
    "format": "@avg_departure_delay[value]，其中 \"value\" 是延误时间（分钟），保留两位小数。",
    "file_name": "4-1.xlsx",
    "level": "easy"
  },
  {
    "id": 107,
    "question": "统计被取消的航班数量。",
    "concepts": ["条件统计"],
    "constraints": "统计 '状态' 为 '取消' 的行数。",
    "format": "@cancelled_flights[value]，其中 \"value\" 是整数，表示取消航班数。",
    "file_name": "4-1.xlsx",
    "level": "easy"
  },
  {
    "id": 108,
    "question": "找出出现频率最高的飞机机型。",
    "concepts": ["众数", "分类数据分析"],
    "constraints": "找出 '机型' 列中出现次数最多的值。",
    "format": "@most_common_aircraft[value]，其中 \"value\" 是最常见机型的字符串。",
    "file_name": "4-1.xlsx",
    "level": "medium"
  },
  {
    "id": 109,
    "question": "计算航班准点率（以“准时”状态的航班占总航班的百分比）。",
    "concepts": ["比例计算"],
    "constraints": "以 '状态' 为 '准时' 的航班数除以总航班数，结果保留两位小数。",
    "format": "@on_time_rate[value]，其中 \"value\" 是百分比，保留两位小数。",
    "file_name": "4-1.xlsx",
    "level": "medium"
  },
  {
    "id": 110,
    "question": "计算所有员工的平均工作时长（小时）。",
    "concepts": ["工作时间计算", "平均值"],
    "constraints": "使用 pandas 计算 '工作时长(小时)' 列的平均值，保留两位小数。",
    "format": "@avg_work_hours[value]，其中 \"value\" 是平均工时，保留两位小数。",
    "file_name": "4-2.xlsx",
    "level": "easy"
  },
  {
    "id": 111,
    "question": "统计缺勤员工的数量。",
    "concepts": ["条件统计"],
    "constraints": "统计 '考勤状态' 为 '缺勤' 的记录数量。",
    "format": "@absent_count[value]，其中 \"value\" 是缺勤人数。",
    "file_name": "4-2.xlsx",
    "level": "easy"
  },
  {
    "id": 112,
    "question": "哪个部门的出勤率最高？",
    "concepts": ["分组计算", "比例分析"],
    "constraints": "以 '考勤状态' 为 '正常' 的人数占各部门总记录数，找出比例最高的部门及其百分比，保留两位小数。",
    "format": "@top_attendance_dept[部门:value%]，其中 \"部门\" 是部门名，\"value\" 是百分比。",
    "file_name": "4-2.xlsx",
    "level": "medium"
  },
  {
    "id": 113,
    "question": "哪位员工的平均工作时长最长？",
    "concepts": ["分组聚合", "平均值"],
    "constraints": "按 '员工姓名' 分组计算其平均 '工作时长(小时)'，返回最大值对应的姓名。",
    "format": "@longest_avg_employee[value]，其中 \"value\" 是员工姓名。",
    "file_name": "4-2.xlsx",
    "level": "medium"
  },
  {
    "id": 114,
    "question": "计算所有产品的总库存价值。",
    "concepts": ["库存管理", "加总计算"],
    "constraints": "使用 pandas 计算 '库存价值' 列的总和，保留两位小数。",
    "format": "@total_inventory_value[value]，其中 \"value\" 是库存总价值，保留两位小数。",
    "file_name": "4-3.xlsx",
    "level": "easy"
  },
  {
    "id": 115,
    "question": "统计需要补货的产品数量。",
    "concepts": ["条件统计"],
    "constraints": "统计 '需要补货' 列中为 True 的记录数量。",
    "format": "@restock_needed[value]，其中 \"value\" 是需要补货的产品数量。",
    "file_name": "4-3.xlsx",
    "level": "easy"
  },
  {
    "id": 116,
    "question": "哪个产品的库存数量最少？",
    "concepts": ["最小值查找"],
    "constraints": "返回 '库存数量' 最小值对应的 '产品名称'。",
    "format": "@lowest_stock_product[value]，其中 \"value\" 是产品名称。",
    "file_name": "4-3.xlsx",
    "level": "easy"
  },
  {
    "id": 117,
    "question": "哪个类别的产品平均单价最高？",
    "concepts": ["分组聚合", "平均值"],
    "constraints": "按 '类别' 分组，比较其平均 '单价'，返回最高的类别。",
    "format": "@highest_avg_price_category[value]，其中 \"value\" 是类别名称。",
    "file_name": "4-3.xlsx",
    "level": "medium"
  },
  {
    "id": 118,
    "question": "计算所有货物的总重量（kg）。",
    "concepts": ["加总计算", "运输分析"],
    "constraints": "使用 pandas 计算 '货物重量(kg)' 列的总和，结果保留两位小数。",
    "format": "@total_weight[value]，其中 \"value\" 是总重量（kg），保留两位小数。",
    "file_name": "4-4.xlsx",
    "level": "easy"
  },
  {
    "id": 119,
    "question": "统计每种当前状态下的订单数量。",
    "concepts": ["分类统计"],
    "constraints": "按 '当前状态' 列分组并统计每类数量。",
    "format": "@order_status_count[状态1:数量1, 状态2:数量2, ...]。",
    "file_name": "4-4.xlsx",
    "level": "medium"
  },
  {
    "id": 120,
    "question": "计算订单的平均运费。",
    "concepts": ["平均值"],
    "constraints": "计算 '运费' 的平均值，保留两位小数。",
    "format": "@average_shipping_cost[value]，其中 \"value\" 是平均运费（元）。",
    "file_name": "4-4.xlsx",
    "level": "easy"
  },
  {
    "id": 121,
    "question": "哪个承运公司平均运费最高？",
    "concepts": ["分组聚合", "最大值"],
    "constraints": "按 '承运公司' 分组，比较其平均 '运费'，返回最高的公司。",
    "format": "@highest_avg_shipping_carrier[value]，其中 \"value\" 是承运公司名称。",
    "file_name": "4-4.xlsx",
    "level": "medium"
  },
  {
    "id": 122,
    "question": "统计各类预约状态的数量。",
    "concepts": ["分类统计", "医院预约"],
    "constraints": "统计“状态”字段各类的数量。",
    "format": "@appointment_status_count[状态1:数量1, 状态2:数量2, ...]。",
    "file_name": "4-5.xlsx",
    "level": "easy"
  },
  {
    "id": 123,
    "question": "统计口腔科的预约总数。",
    "concepts": ["条件筛选", "医院预约"],
    "constraints": "筛选“科室”为“口腔科”的记录，返回数量。",
    "format": "@dentistry_appointments[value]，其中 \"value\" 是预约数量。",
    "file_name": "4-5.xlsx",
    "level": "easy"
  },
  {
    "id": 124,
    "question": "哪位医生的预约次数最多？",
    "concepts": ["频数统计"],
    "constraints": "统计 '医生' 列，返回预约次数最多的医生姓名。",
    "format": "@most_booked_doctor[value]，其中 \"value\" 是医生姓名。",
    "file_name": "4-5.xlsx",
    "level": "medium"
  },
  {
    "id": 125,
    "question": "计算所有患者的平均年龄。",
    "concepts": ["平均值", "人口统计"],
    "constraints": "使用 pandas 计算 '年龄' 的平均值，保留两位小数。",
    "format": "@average_patient_age[value]，其中 \"value\" 是平均年龄。",
    "file_name": "4-5.xlsx",
    "level": "easy"
  },
  {
    "id": 126,
    "question": "统计各类型电影的数量。",
    "concepts": ["分类统计", "电影数据"],
    "constraints": "统计“类型”字段中每种类型的电影数量。",
    "format": "@movie_genre_count[类型1:数量1, 类型2:数量2, ...]。",
    "file_name": "4-6.xlsx",
    "level": "easy"
  },
  {
    "id": 127,
    "question": "计算所有电影的平均评分。",
    "concepts": ["平均值", "评分分析"],
    "constraints": "使用 pandas 计算“评分”列的平均值，保留两位小数。",
    "format": "@average_movie_rating[value]，其中 \"value\" 是平均评分。",
    "file_name": "4-6.xlsx",
    "level": "easy"
  },
  {
    "id": 128,
    "question": "哪部电影的票房最高？",
    "concepts": ["极值查找", "票房数据"],
    "constraints": "返回“票房(万)”最高的电影名称。",
    "format": "@highest_grossing_movie[value]，其中 \"value\" 是电影名称。",
    "file_name": "4-6.xlsx",
    "level": "medium"
  },
  {
    "id": 129,
    "question": "计算所有电影的总票房（单位：万）。",
    "concepts": ["合计统计"],
    "constraints": "汇总“票房(万)”列的总和，保留两位小数。",
    "format": "@total_box_office[value]，其中 \"value\" 是总票房。",
    "file_name": "4-6.xlsx",
    "level": "easy"
  },
  {
    "id": 130,
    "question": "统计每种房源类型的数量。",
    "concepts": ["分类统计", "房产类型"],
    "constraints": "统计“类型”列中每类房源的数量。",
    "format": "@property_type_count[类型1:数量1, 类型2:数量2, ...]",
    "file_name": "4-7.xlsx",
    "level": "easy"
  },
  {
    "id": 131,
    "question": "计算所有房源的平均单价（元/㎡）。",
    "concepts": ["均值计算", "价格分析"],
    "constraints": "使用 pandas 计算“单价(元/㎡)”列的平均值，保留两位小数。",
    "format": "@average_price_per_sqm[value]",
    "file_name": "4-7.xlsx",
    "level": "easy"
  },
  {
    "id": 132,
    "question": "计算所有房源的总面积。",
    "concepts": ["面积合计"],
    "constraints": "对“面积(㎡)”列求和，保留两位小数。",
    "format": "@total_area[value]",
    "file_name": "4-7.xlsx",
    "level": "easy"
  },
  {
    "id": 133,
    "question": "找出单价最高的房源标题。",
    "concepts": ["极值查找"],
    "constraints": "返回“单价(元/㎡)”最高的房源对应的标题。",
    "format": "@max_unit_price_title[value]",
    "file_name": "4-7.xlsx",
    "level": "medium"
  },
  {
    "id": 134,
    "question": "计算所有订单的平均总价。",
    "concepts": ["平均值计算", "订单数据分析"],
    "constraints": "使用 pandas 计算“总价”列的平均值，保留两位小数。",
    "format": "@average_total_price[value]",
    "file_name": "4-8.xlsx",
    "level": "easy"
  },
  {
    "id": 135,
    "question": "统计最常被点的菜品名称。",
    "concepts": ["频率统计", "字符串处理"],
    "constraints": "拆分“菜品”字段，统计所有菜品出现频次，找出最常见的一道菜。",
    "format": "@most_common_dish[value]",
    "file_name": "4-8.xlsx",
    "level": "medium"
  },
  {
    "id": 136,
    "question": "找出订单总价最高的桌号。",
    "concepts": ["极值查找", "订单分析"],
    "constraints": "找出“总价”列最大值对应的“桌号”。",
    "format": "@max_total_price_table[value]",
    "file_name": "4-8.xlsx",
    "level": "easy"
  },
  {
    "id": 137,
    "question": "计算所有订单的总数量。",
    "concepts": ["数量求和"],
    "constraints": "将“数量”列求和，结果为整数。",
    "format": "@total_quantity[value]",
    "file_name": "4-8.xlsx",
    "level": "easy"
  },
  {
    "id": 138,
    "question": "计算所有订单的平均总金额。",
    "concepts": ["平均值", "财务汇总"],
    "constraints": "使用 pandas 计算“总金额”列的平均值，保留两位小数。",
    "format": "@average_total_amount[value]",
    "file_name": "4-9.xlsx",
    "level": "easy"
  },
  {
    "id": 139,
    "question": "找出销售总金额最高的地区。",
    "concepts": ["分组汇总", "区域分析"],
    "constraints": "对“地区”字段分组，对“总金额”汇总后取最大。",
    "format": "@top_region_by_sales[value]",
    "file_name": "4-9.xlsx",
    "level": "medium"
  },
  {
    "id": 140,
    "question": "找出销量最高的产品名称。",
    "concepts": ["产品销量分析"],
    "constraints": "对“产品名称”按数量求和，找出销量最多的产品。",
    "format": "@top_selling_product[value]",
    "file_name": "4-9.xlsx",
    "level": "medium"
  },
  {
    "id": 141,
    "question": "统计所有订单中产品的总购买数量。",
    "concepts": ["数量统计"],
    "constraints": "将“数量”列求和，结果为整数。",
    "format": "@total_product_quantity[value]",
    "file_name": "4-9.xlsx",
    "level": "easy"
  },
  {
    "id": 142,
    "question": "计算所有内容的平均点赞数。",
    "concepts": ["平均值", "用户互动"],
    "constraints": "使用 pandas 计算“点赞数”列的平均值，保留两位小数。",
    "format": "@average_likes[value]",
    "file_name": "5-1.xlsx",
    "level": "easy"
  },
  {
    "id": 143,
    "question": "找出互动率最高的内容类型。",
    "concepts": ["互动分析", "分组统计"],
    "constraints": "对“内容类型”分组，比较“互动率(%)”平均值，找出最高的类型。",
    "format": "@top_content_type_by_engagement[value]",
    "file_name": "5-1.xlsx",
    "level": "medium"
  },
  {
    "id": 144,
    "question": "统计每个平台发布的内容数量。",
    "concepts": ["分类统计", "平台分析"],
    "constraints": "统计“平台”列中每个平台对应的内容数量，结果为字典。",
    "format": "@platform_content_counts[value]",
    "file_name": "5-1.xlsx",
    "level": "medium"
  },
  {
    "id": 145,
    "question": "找出观看数最高的内容作者。",
    "concepts": ["最大值分析", "作者表现"],
    "constraints": "找出“观看数”列中数值最大的行，对应的“作者”为答案。",
    "format": "@top_view_author[value]",
    "file_name": "5-1.xlsx",
    "level": "easy"
  },
  {
    "id": 146,
    "question": "计算所有交易的总交易金额。",
    "concepts": ["总和", "交易分析"],
    "constraints": "使用 pandas 计算“交易金额”列的总和，保留两位小数。",
    "format": "@total_transaction_amount[value]",
    "file_name": "5-2.xlsx",
    "level": "easy"
  },
  {
    "id": 147,
    "question": "找出盈亏金额最高的交易ID。",
    "concepts": ["最大值分析", "交易盈亏"],
    "constraints": "在“盈亏金额”列中找出最大值所对应的“交易ID”。",
    "format": "@max_profit_trade_id[value]",
    "file_name": "5-2.xlsx",
    "level": "easy"
  },
  {
    "id": 148,
    "question": "统计每种交易类型的交易数量。",
    "concepts": ["分类统计", "交易类型分析"],
    "constraints": "统计“交易类型”列中每个类型出现的次数，返回字典格式。",
    "format": "@trade_type_counts[value]",
    "file_name": "5-2.xlsx",
    "level": "medium"
  },
  {
    "id": 149,
    "question": "计算所有交易的平均盈亏比例。",
    "concepts": ["平均值", "盈亏分析"],
    "constraints": "使用 pandas 计算“盈亏比例”列的平均值，保留两位小数。",
    "format": "@average_profit_rate[value]",
    "file_name": "5-2.xlsx",
    "level": "easy"
  },
  {
    "id": 150,
    "question": "找出总分最高的学生姓名。",
    "concepts": ["最大值分析", "学生成绩"],
    "constraints": "使用 pandas 找出“总分”列最大值对应的“姓名”。",
    "format": "@top_score_student_name[value]",
    "file_name": "5-3.xlsx",
    "level": "easy"
  },
  {
    "id": 151,
    "question": "计算所有学生的数学平均分。",
    "concepts": ["平均值", "数学成绩"],
    "constraints": "使用 pandas 计算“数学”列的平均值，保留两位小数。",
    "format": "@average_math_score[value]",
    "file_name": "5-3.xlsx",
    "level": "easy"
  },
  {
    "id": 152,
    "question": "统计每个班级的学生数量。",
    "concepts": ["分类统计", "学生分析"],
    "constraints": "对“班级”列进行计数，返回字典格式。",
    "format": "@class_counts[value]",
    "file_name": "5-3.xlsx",
    "level": "medium"
  },
  {
    "id": 153,
    "question": "计算物理成绩高于80分的学生人数。",
    "concepts": ["条件计数", "物理成绩"],
    "constraints": "统计“物理”列中大于80的行数。",
    "format": "@physics_above_80_count[value]",
    "file_name": "5-3.xlsx",
    "level": "easy"
  },
  {
    "id": 157,
    "question": "计算2018年第一季度（1月至3月）TotalUS地区有机鳄梨的最大总销量。",
    "concepts": ["Filtering", "Maximum"],
    "constraints": "使用pandas计算region='TotalUS'、type='organic'、year=2018、日期在2018年1月7日至3月25日之间的'Total Volume'列最大值，保留两位小数。",
    "format": "@max_volume_totalus_2018[value]，其中value为保留两位小数的浮点数。",
    "file_name": "avocado.xlsx",
    "level": "medium"
  },
  {
    "id": 158,
    "question": "找出2015年Atlanta地区常规鳄梨平均价格最低的周。",
    "concepts": ["Filtering", "Minimum"],
    "constraints": "使用pandas找出region='Atlanta'、type='conventional'、year=2015的'AveragePrice'列最小值及其对应的日期。",
    "format": "@min_price_week_atlanta_2015[date]，其中date为YYYY-MM-DD格式的日期。",
    "file_name": "avocado.xlsx",
    "level": "medium"
  },
  {
    "id": 159,
    "question": "计算2015年Boise地区常规鳄梨小包装占总包装的比例。",
    "concepts": ["Proportion", "Summary Statistics"],
    "constraints": "使用pandas计算region='Boise'、type='conventional'、year=2015的'Small Bags'总和除以'Total Bags'总和，保留两位小数。",
    "format": "@small_bags_ratio_boise_2015[value]，其中value为保留两位小数的浮点数。",
    "file_name": "avocado.xlsx",
    "level": "medium"
  },
  {
    "id": 160,
    "question": "计算2018年第一季度（1月至3月）SanFrancisco地区有机鳄梨的价格范围。",
    "concepts": ["Filtering", "Range"],
    "constraints": "使用pandas计算region='SanFrancisco'、type='organic'、year=2018、日期在2018年1月7日至3月25日之间的'AveragePrice'列最大值与最小值的差，保留两位小数。",
    "format": "@price_range_sanfrancisco_2018[value]，其中value为保留两位小数的浮点数。",
    "file_name": "avocado.xlsx",
    "level": "medium"
  },
  {
    "id": 161,
    "question": "计算2015年Albany地区常规鳄梨平均价格与总销量的相关性。",
    "concepts": ["Correlation"],
    "constraints": "使用pandas计算region='Albany'、type='conventional'、year=2015的'AveragePrice'与'Total Volume'列的皮尔逊相关系数，保留两位小数。",
    "format": "@correlation_albany_2015[value]，其中value为保留两位小数的浮点数。",
    "file_name": "avocado.xlsx",
    "level": "hard"
  },
  {
    "id": 163,
    "question": "找出2018年第一季度（1月至3月）Seattle地区有机鳄梨平均价格最高的周。",
    "concepts": ["Filtering", "Maximum"],
    "constraints": "使用pandas找出region='Seattle'、type='organic'、year=2018、日期在2018年1月7日至3月25日之间的'AveragePrice'列最大值及其对应的日期。",
    "format": "@max_price_week_seattle_2018[date]，其中date为YYYY-MM-DD格式的日期。",
    "file_name": "avocado.xlsx",
    "level": "medium"
  },
  {
    "id": 164,
    "question": "计算订阅定期存款的客户比例。",
    "concepts": ["summary statistics", "proportion"],
    "constraints": "使用 pandas 统计 'y' 列中为 'yes' 的记录占总记录的比例，保留两位小数。",
    "format": "@subscription_ratio[value]，其中 value 是保留两位小数的浮点数。",
    "file_name": "bank-additional-full.xlsx",
    "level": "easy"
  },
  {
    "id": 165,
    "question": "统计客户的职业类型分布比例。",
    "concepts": ["data aggregation", "distribution"],
    "constraints": "使用 pandas 统计 'job' 列中各职业类型的比例，保留两位小数，按比例降序排列，'unknown' 排在最后（如果有）。",
    "format": "@job_distribution[job1:proportion1,job2:proportion2,...]，其中 job 为职业类型，proportion 为保留两位小数的浮点数。",
    "file_name": "bank-additional-full.xlsx",
    "level": "medium"
  },
  {
    "id": 166,
    "question": "计算通话的平均时长。",
    "concepts": ["summary statistics"],
    "constraints": "使用 pandas 计算 'duration' 列的平均值，保留两位小数。",
    "format": "@avg_call_duration[value]，其中 value 为保留两位小数的浮点数。",
    "file_name": "bank-additional-full.xlsx",
    "level": "easy"
  },
  {
    "id": 167,
    "question": "计算各月份通话次数的比例分布。",
    "concepts": ["data aggregation", "distribution"],
    "constraints": "使用 pandas 统计 'month' 列中每个月的通话占比，保留两位小数，按比例降序排列。",
    "format": "@month_call_ratio[month1:proportion1,month2:proportion2,...]，其中 month 为月份，proportion 为保留两位小数的浮点数。",
    "file_name": "bank-additional-full.xlsx",
    "level": "medium"
  },
  {
    "id": 168,
    "question": "计算乘客的整体生存率。",
    "concepts": ["summary statistics", "proportion"],
    "constraints": "使用 pandas 计算数据集中 Survived=1 的比例，保留两位小数。",
    "format": "@survival_rate[value]，其中 value 是保留两位小数的浮点数。",
    "file_name": "Titanic.xlsx",
    "level": "easy"
  },
  {
    "id": 169,
    "question": "计算乘客的平均年龄。",
    "concepts": ["summary statistics"],
    "constraints": "使用 pandas 计算 'Age' 列的均值，忽略缺失值。保留两位小数。",
    "format": "@avg_age[value]，其中 value 是保留两位小数的浮点数。",
    "file_name": "Titanic.xlsx",
    "level": "easy"
  },
  {
    "id": 170,
    "question": "计算男性和女性乘客的比例。",
    "concepts": ["data aggregation", "distribution"],
    "constraints": "使用 pandas 计算 'Sex' 列中各性别的比例，保留两位小数，并按比例降序排列。",
    "format": "@sex_ratio[sex1:proportion1,sex2:proportion2]，其中 sex 为性别，proportion 为保留两位小数的浮点数。",
    "file_name": "Titanic.xlsx",
    "level": "medium"
  },
  {
    "id": 171,
    "question": "哪个舱位等级的生存率最高？",
    "concepts": ["data aggregation", "proportion"],
    "constraints": "使用 pandas 计算各 Pclass 中 Survived=1 的比例，返回生存率最高的舱位等级及其比例，保留两位小数。",
    "format": "@highest_survival_pclass[pclass:proportion]，其中 pclass 为舱位等级（1、2 或 3），proportion 为保留两位小数的浮点数。",
    "file_name": "Titanic.xlsx",
    "level": "medium"
  },
  {
    "id": 172,
    "question": "计算乘客票价的分布比例。",
    "concepts": ["data aggregation", "distribution"],
    "constraints": "使用 pandas 将 'Fare' 列按区间（0-50, 50-100, 100-150, 150-200, 200+）进行分箱，计算每个区间内乘客所占比例，保留两位小数并按比例降序排列。",
    "format": "@fare_distribution[interval1:proportion1,interval2:proportion2,...]，其中 interval 为票价区间，proportion 为保留两位小数的浮点数。",
    "file_name": "Titanic.xlsx",
    "level": "medium"
  },{
    "id": 173,
    "question": "RM（平均房间数）与房价中位数（MEDV）之间的相关性是多少？",
    "concepts": ["correlation"],
    "constraints": "使用 pandas 计算 'RM' 与 'MEDV' 列之间的皮尔逊相关系数，保留两位小数。",
    "format": "@corr_rm_medv[value]，其中 value 是保留两位小数的浮点数。",
    "file_name": "boston.xlsx",
    "level": "easy"
  },
  {
    "id": 174,
    "question": "哪个变量与房价中位数（MEDV）的相关性最高？",
    "concepts": ["correlation"],
    "constraints": "使用 pandas 计算各列与 'MEDV' 的皮尔逊相关系数（绝对值最大者），返回变量名和相关系数，保留两位小数。",
    "format": "@max_corr_medv[variable,value]，其中 variable 为变量名，value 为保留两位小数的浮点数。",
    "file_name": "boston.xlsx",
    "level": "medium"
  },
  {
    "id": 175,
    "question": "波士顿房屋的平均年龄是多少？",
    "concepts": ["summary statistics"],
    "constraints": "使用 pandas 计算 'AGE' 列的均值，保留两位小数。",
    "format": "@avg_age[value]，其中 value 为保留两位小数的浮点数。",
    "file_name": "boston.xlsx",
    "level": "easy"
  },
  {
    "id": 176,
    "question": "各城镇的师生比（PTRATIO）分布情况如何？",
    "concepts": ["distribution"],
    "constraints": "统计 'PTRATIO' 列中每个值的出现频次，按升序排列。",
    "format": "@ptratio_distribution[{ratio1:count1,ratio2:count2,...}]，其中 ratio 为师生比，count 为出现次数。",
    "file_name": "boston.xlsx",
    "level": "medium"
  },
  {
    "id": 177,
    "question": "找出房屋中位数价值（MEDV）最高的城镇，并给出该房价。",
    "concepts": ["maximum", "summary statistics"],
    "constraints": "使用 pandas 找出 'MEDV' 最大的记录，并返回该房价值，保留两位小数。",
    "format": "@max_medv[value]，其中 value 为保留两位小数的浮点数。",
    "file_name": "boston.xlsx",
    "level": "easy"
  }, {
    "id": 178,
    "question": "每场世界杯比赛的平均进球数是多少？",
    "concepts": ["summary statistics"],
    "constraints": "使用 pandas 计算每场比赛的总进球数（主队进球 + 客队进球），并计算其均值，保留两位小数。",
    "format": "@avg_goals_per_match[value]，其中 value 为保留两位小数的浮点数。",
    "file_name": "WorldCupMatches.xlsx",
    "level": "easy"
  },
  {
    "id": 179,
    "question": "世界杯比赛中有多少比例以平局结束？",
    "concepts": ["proportion", "conditional filtering"],
    "constraints": "统计 Home Team Goals 等于 Away Team Goals 的比赛数量，占总比赛的比例，保留两位小数。",
    "format": "@draw_match_ratio[value]，其中 value 为保留两位小数的浮点数。",
    "file_name": "WorldCupMatches.xlsx",
    "level": "easy"
  },
  {
    "id": 180,
    "question": "哪个国家赢得世界杯冠军的次数最多？",
    "concepts": ["frequency analysis", "maximum"],
    "constraints": "使用 pandas 统计 Winner 列中出现次数最多的国家及其次数。",
    "format": "@most_titles_country[country,count]，其中 country 为国家名，count 为整数。",
    "file_name": "WorldCups.xlsx",
    "level": "easy"
  },
  {
    "id": 181,
    "question": "每场比赛的观众人数分布情况如何？",
    "concepts": ["distribution", "binning"],
    "constraints": "使用 pandas 将每场比赛的 Attendance 分箱为六个区间：0-20k, 20k-40k, ..., 100k+，统计每个区间的比赛数量。",
    "format": "@attendance_distribution[{interval1:count1,interval2:count2,...}]，其中 interval 为区间标签，count 为整数。",
    "file_name": "WorldCupMatches.xlsx",
    "level": "medium"
  },
  {
    "id": 182,
    "question": "世界杯数据集中是否包含球员年龄信息？",
    "concepts": ["data inspection"],
    "constraints": "检查 WorldCupPlayers.xlsx 是否包含年龄字段，如果没有，可跳过该分析。",
    "format": "@age_data_status[value]，其中 value 为 'available' 或 'not available'。",
    "file_name": "WorldCupPlayers.xlsx",
    "level": "easy"
  },{
    "id": 183,
    "question": "这些畅销书的平均用户评分是多少？",
    "concepts": ["summary statistics"],
    "constraints": "使用 pandas 计算 'User Rating' 列的均值，保留两位小数。",
    "format": "@avg_user_rating[value]，其中 value 为保留两位小数的浮点数。",
    "file_name": "bestsellers-with-categories.xlsx",
    "level": "easy"
  },
  {
    "id": 184,
    "question": "这些书籍收到的评论数量分布情况如何？",
    "concepts": ["distribution", "binning"],
    "constraints": "将 'Reviews' 列分为若干区间（0–500, 500–2000, 2000–5000, 5000–10000, 10000–20000, 20000+），统计每个区间的图书数量。",
    "format": "@review_distribution[{interval1:count1,interval2:count2,...}]，其中 interval 为评论区间，count 为整数。",
    "file_name": "bestsellers-with-categories.xlsx",
    "level": "medium"
  },
  {
    "id": 185,
    "question": "哪本书的价格最高？",
    "concepts": ["maximum"],
    "constraints": "找出 'Price' 最大的图书名称及其价格。",
    "format": "@most_expensive_book[name,price]，其中 name 为书名，price 为整数。",
    "file_name": "bestsellers-with-categories.xlsx",
    "level": "easy"
  },
  {
    "id": 186,
    "question": "书籍评分与价格之间是否存在相关性？",
    "concepts": ["correlation"],
    "constraints": "使用 pandas 计算 'User Rating' 与 'Price' 的相关系数（皮尔逊），保留两位小数。",
    "format": "@rating_price_corr[value]，其中 value 为保留两位小数的浮点数。",
    "file_name": "bestsellers-with-categories.xlsx",
    "level": "medium"
  },
  {
    "id": 187,
    "question": "不同类型图书（Genre）在数据集中的分布如何？",
    "concepts": ["distribution", "categorical analysis"],
    "constraints": "统计 'Genre' 列中各类别的数量。",
    "format": "@genre_distribution[{genre1:count1,genre2:count2,...}]，其中 genre 为类型，count 为整数。",
    "file_name": "bestsellers-with-categories.xlsx",
    "level": "easy"
  },{
    "id": 188,
    "question": "完成购买的访客比例是多少？",
    "concepts": ["proportion", "binary classification"],
    "constraints": "使用 pandas 计算 'Revenue' 列中为 True 的比例，保留两位小数。",
    "format": "@purchase_ratio[value]，其中 value 为保留两位小数的浮点数。",
    "file_name": "online_shoppers_intention.xlsx",
    "level": "easy"
  },
  {
    "id": 189,
    "question": "访客访问的页面数量分布情况如何？",
    "concepts": ["distribution", "binning"],
    "constraints": "将 Administrative、Informational 和 ProductRelated 三类页面访问量相加后进行区间划分（0-5、5-10、10-20、20-30、30-50、50-100、100+），统计各区间的频数。",
    "format": "@visit_distribution[{interval1:count1,interval2:count2,...}]，其中 interval 为区间标签，count 为整数。",
    "file_name": "online_shoppers_intention.xlsx",
    "level": "medium"
  },
  {
    "id": 190,
    "question": "访客在网站上的平均停留时间是多少？",
    "concepts": ["summary statistics"],
    "constraints": "将 Administrative_Duration、Informational_Duration 和 ProductRelated_Duration 三列相加后取平均，保留两位小数。",
    "format": "@avg_stay_time[value]，其中 value 为保留两位小数的浮点数。",
    "file_name": "online_shoppers_intention.xlsx",
    "level": "easy"
  },
  {
    "id": 191,
    "question": "跳出率与完成购买之间是否存在相关性？",
    "concepts": ["correlation"],
    "constraints": "计算 BounceRates 与 Revenue（True=1, False=0）之间的皮尔逊相关系数，保留两位小数。",
    "format": "@bounce_revenue_corr[value]，其中 value 为保留两位小数的浮点数。",
    "file_name": "online_shoppers_intention.xlsx",
    "level": "medium"
  },
  {
    "id": 192,
    "question": "访客使用的操作系统分布情况如何？",
    "concepts": ["categorical analysis", "distribution"],
    "constraints": "统计 OperatingSystems 列中每个值的出现次数，按操作系统编号升序排列。",
    "format": "@os_distribution[{os1:count1,os2:count2,...}]，其中 os 为操作系统编号，count 为整数。",
    "file_name": "online_shoppers_intention.xlsx",
    "level": "easy"
  },{
    "id": 193,
    "question": "Apple 股票的平均日收益率是多少？",
    "concepts": ["summary statistics", "time series"],
    "constraints": "使用 pandas 计算以对数收益率为基础的日均收益率（log(Adj Close_t / Adj Close_{t-1})），保留四位小数。",
    "format": "@avg_daily_return[value]，其中 value 为保留四位小数的浮点数。",
    "file_name": "Apple.xlsx",
    "level": "medium"
  },
  {
    "id": 194,
    "question": "Apple 股票每日的交易量分布情况如何？",
    "concepts": ["distribution", "binning"],
    "constraints": "将 'Volume' 列按区间 [0-1千万, 1千万-5千万, 5千万-1亿, 1亿-2亿, 2亿-5亿, 5亿-10亿, 10亿+] 分箱并统计每个区间的频数。",
    "format": "@volume_distribution[{interval1:count1,interval2:count2,...}]，其中 interval 为区间，count 为整数。",
    "file_name": "Apple.xlsx",
    "level": "medium"
  },{
    "id": 195,
    "question": "Google 股票的日收益率波动性（标准差）是多少？",
    "concepts": ["volatility", "summary statistics"],
    "constraints": "使用 pandas 计算对数收益率 log(Adj Close_t / Adj Close_{t-1}) 的标准差，保留四位小数。",
    "format": "@google_volatility[value]，其中 value 为保留四位小数的浮点数。",
    "file_name": "Google.xlsx",
    "level": "medium"
  },
  {
    "id": 196,
    "question": "Amazon 股票的历史最高收盘价是多少？是哪一天？",
    "concepts": ["maximum", "time series"],
    "constraints": "找出 'Close' 的最大值及其对应日期。",
    "format": "@amazon_max_close[value,date]，其中 value 为保留两位小数的浮点数，date 为 YYYY-MM-DD 格式的日期。",
    "file_name": "Amazon.xlsx",
    "level": "easy"
  },
  {
    "id": 197,
    "question": "Netflix 股票每年的平均成交量是多少？",
    "concepts": ["grouping", "time series", "aggregation"],
    "constraints": "按年份统计 'Volume' 列的平均值，结果为整数，按年份升序排列。",
    "format": "@netflix_avg_volume_by_year[{year1:volume1,year2:volume2,...}]，其中 year 为年份，volume 为平均交易量整数。",
    "file_name": "Netflix.xlsx",
    "level": "medium"
  },{
    "id": 198,
    "question": "该商店在2015年的总销售收入是多少？",
    "concepts": ["summary statistics"],
    "constraints": "使用 pandas 计算 'Sales' 列的总和，保留两位小数。",
    "format": "@total_sales[value]，其中 value 为保留两位小数的浮点数。",
    "file_name": "SuperStoreUS-2015.xlsx",
    "level": "easy"
  },
  {
    "id": 199,
    "question": "哪一类产品对销售额贡献最大？对应的销售额是多少？",
    "concepts": ["aggregation", "maximum"],
    "constraints": "按 'Product Category' 分组并求 'Sales' 总和，找出最大值及对应类别。",
    "format": "@top_category_sales[category,value]，其中 category 为类别名称，value 为保留两位小数的浮点数。",
    "file_name": "SuperStoreUS-2015.xlsx",
    "level": "medium"
  },
  {
    "id": 200,
    "question": "2015年每月的销售趋势如何？",
    "concepts": ["time series", "trend analysis"],
    "constraints": "按 'Order Date' 的月份聚合 'Sales'，统计每月总销售额，按时间升序排列。",
    "format": "@monthly_sales[{month1:sales1,month2:sales2,...}]，其中 month 为 'YYYY-MM' 格式，sales 为保留两位小数的浮点数。",
    "file_name": "SuperStoreUS-2015.xlsx",
    "level": "medium"
  },
  {
    "id": 201,
    "question": "哪个地区的销售额最高？哪个最低？",
    "concepts": ["aggregation", "comparison"],
    "constraints": "按 'Region' 分组计算 'Sales' 总额，找出最大和最小的地区。",
    "format": "@region_sales_extreme[max_region,min_region]，其中 max_region 和 min_region 为地区名称。",
    "file_name": "SuperStoreUS-2015.xlsx",
    "level": "easy"
  },
  {
    "id": 202,
    "question": "该商店2015年的平均利润率是多少？",
    "concepts": ["profitability"],
    "constraints": "使用总利润除以总销售额计算利润率，保留四位小数。",
    "format": "@avg_profit_margin[value]，其中 value 为保留四位小数的浮点数。",
    "file_name": "SuperStoreUS-2015.xlsx",
    "level": "medium"
  },{
    "id": 203,
    "question": "pH 值与酒精含量之间是否存在相关性？",
    "concepts": ["correlation"],
    "constraints": "使用 pandas 计算 'pH' 与 'alcohol' 列的皮尔逊相关系数，保留两位小数。",
    "format": "@ph_alcohol_corr[value]，其中 value 为保留两位小数的浮点数。",
    "file_name": "winequality-red.xlsx / winequality-white.xlsx",
    "level": "medium"
  },
  {
    "id": 204,
    "question": "哪种类型的葡萄酒具有更高的中位数质量评分？",
    "concepts": ["comparison", "median"],
    "constraints": "分别计算红葡萄酒和白葡萄酒的 'quality' 中位数，保留一位小数。",
    "format": "@median_quality_by_type[{Red:score1,White:score2}]，其中 score1 和 score2 为中位数评分。",
    "file_name": "winequality-red.xlsx / winequality-white.xlsx",
    "level": "medium"
  },
  {
    "id": 205,
    "question": "每种类型葡萄酒的挥发性酸度中位数是多少？",
    "concepts": ["grouping", "summary statistics"],
    "constraints": "按 'Type' 分组并计算 'volatile acidity' 的中位数，保留两位小数。",
    "format": "@median_volatile_acidity[{Red:value1,White:value2}]，其中 value 为保留两位小数的浮点数。",
    "file_name": "winequality-red.xlsx / winequality-white.xlsx",
    "level": "medium"
  },
  {
    "id": 206,
    "question": "数据集中红葡萄酒和白葡萄酒各自所占比例是多少？",
    "concepts": ["distribution", "proportion"],
    "constraints": "统计 'Type' 为 Red 和 White 的占比，保留两位小数。",
    "format": "@wine_type_ratio[{Red:value1,White:value2}]，其中 value 为保留两位小数的比例。",
    "file_name": "winequality-red.xlsx / winequality-white.xlsx",
    "level": "easy"
  },
  {
    "id": 207,
    "question": "每种类型葡萄酒的柠檬酸含量（citric acid）分布情况如何？",
    "concepts": ["distribution", "binning"],
    "constraints": "将 'citric acid' 分为区间 [0-0.1, 0.1-0.3, 0.3-0.5, 0.5-0.7, 0.7-1.0]，分别统计 Red 和 White 的数量。",
    "format": "@citric_acid_distribution[{Red:{区间:数量,...},White:{区间:数量,...}}]",
    "file_name": "winequality-red.xlsx / winequality-white.xlsx",
    "level": "medium"
  },{
    "id": 208,
    "question": "全球各国的幸福评分分布情况如何？",
    "concepts": ["distribution", "binning"],
    "constraints": "将 Score 列按区间 [0-3, 3-5, 5-6, 6-7, 7-8, 8-10] 分箱并统计每个区间的国家数量。",
    "format": "@score_distribution[{interval1:count1,interval2:count2,...}]，其中 interval 为区间，count 为整数。",
    "file_name": "2015–2019.xlsx",
    "level": "easy"
  },
  {
    "id": 209,
    "question": "哪个国家的幸福评分最高？该值是多少？",
    "concepts": ["maximum"],
    "constraints": "找出 Score 最大值及对应国家。",
    "format": "@top_happiness_country[country,score]，其中 country 为国家名，score 为保留三位小数的浮点数。",
    "file_name": "2015–2019.xlsx",
    "level": "easy"
  },
  {
    "id": 210,
    "question": "人均 GDP 与幸福评分之间的相关性是多少？",
    "concepts": ["correlation"],
    "constraints": "使用 pandas 计算 GDP per capita 与 Score 之间的皮尔逊相关系数，保留两位小数。",
    "format": "@gdp_score_corr[value]，其中 value 为保留两位小数的浮点数。",
    "file_name": "2015–2019.xlsx",
    "level": "medium"
  },
  {
    "id": 211,
    "question": "影响幸福评分的各项因素的平均值分别是多少？",
    "concepts": ["summary statistics"],
    "constraints": "分别计算 GDP per capita、Social support、Healthy life expectancy、Freedom、Perceptions of corruption 的平均值，保留两位小数。",
    "format": "@factor_means[{factor1:value1,factor2:value2,...}]，其中 factor 为字段名，value 为保留两位小数的浮点数。",
    "file_name": "2015–2019.xlsx",
    "level": "medium"
  },
  {
    "id": 212,
    "question": "哪一年全球的平均幸福评分最高？对应的评分是多少？",
    "concepts": ["time series", "aggregation"],
    "constraints": "按 Year 分组计算平均 Score，返回最大值对应的年份及评分，评分保留两位小数。",
    "format": "@top_happiness_year[year,score]，其中 year 为整数年份，score 为保留两位小数的浮点数。",
    "file_name": "2015–2019.xlsx",
    "level": "medium"
  },
  {
    "id": 213,
    "question": "计算2024年7月份不包括食品和能源的居民消费价格同比涨跌幅。",
    "concepts": ["filtering"],
    "constraints": "使用 pandas 查找“不包括食品和能源”对应的同比涨跌幅，保留两位小数。",
    "format": "@core_cpi_yoy[value]",
    "file_name": "1-1.xlsx",
    "level": "easy"
  },
  {
    "id": 214,
    "question": "删除2024年7月份鲜菜价格数据后，重新计算食品类别的平均环比涨跌幅。",
    "concepts": ["data deletion", "summary statistics"],
    "constraints": "先删除鲜菜行数据，再计算剩余食品类别的环比平均值，保留两位小数。",
    "format": "@food_mom_ex_veg[value]",
    "file_name": "1-1.xlsx",
    "level": "medium"
  },
  {
    "id": 215,
    "question": "将2024年7月份猪肉同比涨跌幅修改为25.0%后，计算畜肉类的新平均同比涨跌幅。",
    "concepts": ["data modification", "summary statistics"],
    "constraints": "先修改猪肉数据，再计算畜肉类的同比平均值，保留两位小数。",
    "format": "@updated_meat_yoy[value]",
    "file_name": "1-1.xlsx",
    "level": "hard"
  },
  {
    "id": 216,
    "question": "在员工数据表中添加一条新记录（E1020, 王伟, 技术, 2021-09-30, 15500, 4），然后计算技术部门的平均薪资。",
    "concepts": ["data insertion", "groupby"],
    "constraints": "先添加记录，再计算技术部门的平均薪资，保留两位小数。",
    "format": "@tech_avg_salary[value]",
    "file_name": "1-2.xlsx",
    "level": "medium"
  },
  {
    "id": 217,
    "question": "删除绩效评分为1的员工记录后，重新计算人事部门的平均绩效评分。",
    "concepts": ["data deletion", "conditional filtering"],
    "constraints": "先删除绩效为1的记录，再计算人事部门的绩效平均值，保留两位小数。",
    "format": "@hr_avg_perf[value]",
    "file_name": "1-2.xlsx",
    "level": "medium"
  },
  {
    "id": 218,
    "question": "将江苏省2023年GDP修改为130000亿元后，计算长三角地区（上海市+江苏省+浙江省）的新GDP总和。",
    "concepts": ["data modification", "aggregation"],
    "constraints": "先修改江苏数据，再计算三地GDP总和，单位亿元。",
    "format": "@delta_gdp_total[value]",
    "file_name": "1-3.xlsx",
    "level": "hard"
  },
  {
    "id": 219,
    "question": "在采购数据中删除所有'待审批'记录后，计算'办公桌'的实际报价平均值。",
    "concepts": ["data deletion", "conditional filtering"],
    "constraints": "先删除待审批记录，再计算办公桌报价均值，保留两位小数。",
    "format": "@desk_avg_price[value]",
    "file_name": "1-5.xlsx",
    "level": "medium"
  },
  {
    "id": 220,
    "question": "将促销商品的单价统一降低10%后，重新计算2025-06-15至2025-06-20期间的总销售额。",
    "concepts": ["data modification", "datetime filtering"],
    "constraints": "先修改促销商品单价，再计算指定日期范围的销售总额，保留两位小数。",
    "format": "@promo_sales_total[value]",
    "file_name": "1-4.xlsx",
    "level": "hard"
  },
  {
    "id": 221,
    "question": "将2024年6月订单OD015的退货状态改为换货后，重新计算SKU1015的库存当前量。",
    "concepts": ["data modification", "summary statistics"],
    "constraints": "先修改退货状态为换货，再更新库存当前量，保留整数。",
    "format": "@updated_stock[value]",
    "file_name": "2-1.xlsx",
    "level": "medium"
  },
  {
    "id": 222,
    "question": "删除2024年6月所有'无'退货状态的订单记录后，重新计算平均订单数量。",
    "concepts": ["data deletion", "summary statistics"],
    "constraints": "先删除‘无’退货状态的记录，再计算剩余订单的平均订单数量，保留两位小数。",
    "format": "@avg_order_qty[value]",
    "file_name": "2-1.xlsx",
    "level": "medium"
  },
  {
    "id": 223,
    "question": "在员工数据表中添加一条新记录（87, 赵思远, 深圳分公司, 研发部, 23, 0, 2, 0, 0, 1），然后计算研发部的平均加班次数。",
    "concepts": ["data insertion", "groupby"],
    "constraints": "先添加记录，再计算研发部的平均加班次数，保留两位小数。",
    "format": "@rd_avg_overtime[value]",
    "file_name": "1-6.xlsx",
    "level": "medium"
  },
  {
    "id": 224,
    "question": "将北京分公司行政部员工曹玉凤的迟到次数修改为3次后，重新计算该部门平均迟到次数。",
    "concepts": ["data modification", "groupby"],
    "constraints": "先修改数据，再计算北京分公司行政部平均迟到次数，保留两位小数。",
    "format": "@admin_avg_late[value]",
    "file_name": "1-6.xlsx",
    "level": "medium"
  },
  {
    "id": 225,
    "question": "删除北京分公司服务部的所有员工记录后，重新计算北京分公司的平均请假天数。",
    "concepts": ["data deletion", "groupby"],
    "constraints": "先删除服务部记录，再计算北京分公司平均请假天数，保留两位小数。",
    "format": "@beijing_avg_leave[value]",
    "file_name": "1-6.xlsx",
    "level": "hard"
  },
  {
    "id": 226,
    "question": "将货物编号20240009的收货人更改为马思源后，重新统计2024年7月份运往成都双流机场的货物总重量。",
    "concepts": ["data modification", "filtering"],
    "constraints": "先修改收货人信息，再筛选并统计指定机场货物总重量，单位千克。",
    "format": "@chengdu_total_weight[value]",
    "file_name": "1-9.xlsx",
    "level": "medium"
  },
  {
    "id": 227,
    "question": "删除运输方式为海运的货物记录后，重新计算2024年7月空运货物的平均体积。",
    "concepts": ["data deletion", "summary statistics"],
    "constraints": "先删除海运记录，再计算7月空运货物的平均体积，保留两位小数。",
    "format": "@air_avg_volume[value]",
    "file_name": "1-9.xlsx",
    "level": "medium"
  },
  {
    "id": 228,
    "question": "在客户反馈表中新增一条记录（C026, 45500, 建议, 希望增加产品教程, 4, 轻微, 已解决, 市场部），然后统计处理状态为已解决的反馈总数。",
    "concepts": ["data insertion", "summary statistics"],
    "constraints": "先添加记录，再统计处理状态为‘已解决’的反馈条目总数。",
    "format": "@resolved_feedback_count[value]",
    "file_name": "1-7.xlsx",
    "level": "easy"
  },
  {
    "id": 229,
    "question": "将客户ID为C003的反馈内容修改为'希望优化产品性能'后，重新统计反馈类型为建议的条目数量。",
    "concepts": ["data modification", "filtering"],
    "constraints": "先修改反馈内容，再统计反馈类型为建议的条目数量。",
    "format": "@feedback_suggestion_count[value]",
    "file_name": "1-7.xlsx",
    "level": "medium"
  },
  {
    "id": 230,
    "question": "删除问题严重性为'轻微'的反馈记录后，重新计算人力资源部的反馈平均满意度。",
    "concepts": ["data deletion", "groupby"],
    "constraints": "先删除‘轻微’级别的反馈，再计算人力资源部的满意度平均值，保留两位小数。",
    "format": "@hr_avg_satisfaction[value]",
    "file_name": "1-7.xlsx",
    "level": "medium"
  },
  {
  "id": 231,
  "question": "删除车型为'挂车'的记录后，重新计算'和平'单位的收现总和。",
  "concepts": ["data deletion", "groupby"],
  "constraints": "先删除车型为'挂车'的记录，再计算'和平'单位的收现总和，保留两位小数。",
  "format": "@peace_total_receipt[value]",
  "file_name": "2-3.xlsx",
  "level": "medium"
},
{
  "id": 232,
  "question": "将车号为'川A12345'的记账字段更新为500后，重新计算'和平'单位的合计。",
  "concepts": ["data update", "groupby"],
  "constraints": "更新车号为'川A12345'的记账字段为500，再计算'和平'单位的合计，保留两位小数。",
  "format": "@peace_total_sum[value]",
  "file_name": "2-3.xlsx",
  "level": "medium"
},
{
  "id": 233,
  "question": "删除部门为'行政部'的记录后，重新计算所有员工的实发工资平均值。",
  "concepts": ["data deletion", "groupby"],
  "constraints": "先删除部门为'行政部'的记录，再计算剩余员工的实发工资平均值，保留两位小数。",
  "format": "@avg_net_salary[value]",
  "file_name": "2-4.xlsx",
  "level": "medium"
},
{
  "id": 234,
  "question": "将员工'曹玉凤'的基本工资更新为3500后，重新计算'行政部'的应发工资总和。",
  "concepts": ["data update", "groupby"],
  "constraints": "将员工'曹玉凤'的基本工资更新为3500后，再计算'行政部'的应发工资总和，保留两位小数。",
  "format": "@admin_total_salary[value]",
  "file_name": "2-4.xlsx",
  "level": "medium"
},
{
  "id": 235,
  "question": "删除状态为'使用中'的资产记录后，重新计算所有资产的当前价值总和。",
  "concepts": ["data deletion", "groupby"],
  "constraints": "先删除状态为'使用中'的资产记录，再计算剩余资产的当前价值总和，保留两位小数。",
  "format": "@total_current_value[value]",
  "file_name": "2-5.xlsx",
  "level": "medium"
},
{
  "id": 236,
  "question": "将资产编号'AST-3650'的预计使用年限更新为10年后，重新计算所有资产的当前价值平均值。",
  "concepts": ["data update", "groupby"],
  "constraints": "将资产编号'AST-3650'的预计使用年限更新为10年，再计算所有资产的当前价值平均值，保留两位小数。",
  "format": "@avg_current_value[value]",
  "file_name": "2-5.xlsx",
  "level": "medium"
},
{
  "id": 237,
  "question": "删除当前状态为'使用中'的资产记录后，重新计算资产的平均当前价值。",
  "concepts": ["data deletion", "average calculation"],
  "constraints": "先删除状态为'使用中'的资产，再计算剩余资产的平均当前价值，保留两位小数。",
  "format": "@avg_asset_value[value]",
  "file_name": "2-5.xlsx",
  "level": "medium"
},
{
  "id": 238,
  "question": "修改资产编号为'AST-3650'的资产的预计使用年限为10年后，计算所有资产的平均预计使用年限。",
  "concepts": ["data modification", "average calculation"],
  "constraints": "将'AST-3650'的预计使用年限修改为10年，再计算所有资产的平均预计使用年限，保留两位小数。",
  "format": "@avg_lifespan[value]",
  "file_name": "2-5.xlsx",
  "level": "medium"
},
{
  "id": 239,
  "question": "删除点击率CTR小于0.02的广告记录后，计算剩余广告的平均转化率。",
  "concepts": ["data deletion", "average calculation"],
  "constraints": "先删除点击率CTR小于0.02的广告，再计算剩余广告的平均转化率，保留两位小数。",
  "format": "@avg_conversion_rate[value]",
  "file_name": "2-6.xlsx",
  "level": "medium"
},
{
  "id": 240,
  "question": "修改广告ID为'AD001'的广告预算为6000后，计算所有广告的平均点击率CTR。",
  "concepts": ["data modification", "average calculation"],
  "constraints": "将'AD001'的广告预算修改为6000，再计算所有广告的平均点击率CTR，保留两位小数。",
  "format": "@avg_ctr[value]",
  "file_name": "2-6.xlsx",
  "level": "medium"
},
{
  "id": 241,
  "question": "删除预计成交额小于100万的拜访记录后，计算剩余拜访的平均预计成交额。",
  "concepts": ["data deletion", "average calculation"],
  "constraints": "先删除预计成交额小于100万的拜访记录，再计算剩余拜访的平均预计成交额，保留两位小数。",
  "format": "@avg_transaction_amount[value]",
  "file_name": "2-8.xlsx",
  "level": "medium"
},
{
  "id": 242,
  "question": "修改拜访ID为'VIS-7-103'的预计成交额为150万后，计算所有拜访的平均预计成交额。",
  "concepts": ["data modification", "average calculation"],
  "constraints": "将'VIS-7-103'的预计成交额修改为150万，再计算所有拜访的平均预计成交额，保留两位小数。",
  "format": "@avg_visit_amount[value]",
  "file_name": "2-8.xlsx",
  "level": "medium"
},
{
    "id": 243,
    "question": "删除籍贯为新疆的学生记录后，计算剩余学生的语文平均成绩。",
    "concepts": ["data deletion", "average calculation"],
    "constraints": "先删除籍贯为新疆的学生记录，再计算剩余学生的语文平均成绩，保留两位小数。",
    "format": "@avg_chinese_score[value]",
    "file_name": "3-2.xlsx",
    "level": "medium"
  },
  {
    "id": 244,
    "question": "修改学号为117的学生数学成绩为150分后，计算所有学生的数学平均成绩。",
    "concepts": ["data modification", "average calculation"],
    "constraints": "将学号为117的学生数学成绩修改为150分，再计算所有学生的数学平均成绩，保留两位小数。",
    "format": "@avg_math_score[value]",
    "file_name": "3-2.xlsx",
    "level": "medium"
  },
  {
    "id": 245,
    "question": "删除考勤状态为迟到的记录后，计算剩余记录的上班时间平均值。",
    "concepts": ["data deletion", "average calculation"],
    "constraints": "先删除考勤状态为迟到的记录，再计算剩余记录的上班时间平均值（以分钟表示，从0点开始计算），保留两位小数。",
    "format": "@avg_arrival_time[value]",
    "file_name": "3-1.xlsx",
    "level": "medium"
  },
  {
    "id": 246,
    "question": "修改工号为EMP1009的下班时间为18:30后，计算所有记录的下班时间平均值。",
    "concepts": ["data modification", "average calculation"],
    "constraints": "将工号为EMP1009的下班时间修改为18:30，再计算所有记录的下班时间平均值（以分钟表示，从0点开始计算），保留两位小数。",
    "format": "@avg_departure_time[value]",
    "file_name": "3-1.xlsx",
    "level": "medium"
  },
  {
    "id": 247,
    "question": "删除一模总分低于200分的学生记录后，计算剩余学生的数学平均分。",
    "concepts": ["data deletion", "average calculation"],
    "constraints": "先删除一模总分低于200分的学生记录，再计算剩余学生的数学平均分，保留两位小数。",
    "format": "@avg_math_score_exam[value]",
    "file_name": "3-3.xlsx",
    "level": "medium"
  },
  {
    "id": 248,
    "question": "修改学号为119的英语成绩为150分后，计算所有学生的英语平均分。",
    "concepts": ["data modification", "average calculation"],
    "constraints": "将学号为119的英语成绩修改为150分，再计算所有学生的英语平均分，保留两位小数。",
    "format": "@avg_english_score_exam[value]",
    "file_name": "3-3.xlsx",
    "level": "medium"
  },
  {
    "id": 249,
    "question": "删除日期为2023-10-15的记录后，计算剩余记录的上班时间平均值。",
    "concepts": ["data deletion", "average calculation"],
    "constraints": "先删除日期为2023-10-15的记录，再计算剩余记录的上班时间平均值（以分钟表示，从0点开始计算），保留两位小数。",
    "format": "@avg_arrival_time_filtered[value]",
    "file_name": "3-4.xlsx",
    "level": "medium"
  },
  {
    "id": 250,
    "question": "修改姓名为‘张敏’的上班时间为08:00后，计算所有记录的上班时间平均值。",
    "concepts": ["data modification", "average calculation"],
    "constraints": "将姓名为‘张敏’的上班时间修改为08:00，再计算所有记录的上班时间平均值（以分钟表示，从0点开始计算），保留两位小数。",
    "format": "@avg_arrival_time_modified[value]",
    "file_name": "3-4.xlsx",
    "level": "medium"
  },
  {
    "id": 251,
    "question": "删除健康状态为'亚健康'的员工记录后，计算剩余员工的基本工资平均值。",
    "concepts": ["data deletion", "average calculation"],
    "constraints": "先删除健康状态为'亚健康'的员工记录，再计算剩余员工的基本工资平均值，保留两位小数。",
    "format": "@avg_salary[value]",
    "file_name": "3-5.xlsx",
    "level": "medium"
  },
  {
    "id": 252,
    "question": "修改员工ID为215的绩效评分为95分后，计算所有员工的绩效评分平均值。",
    "concepts": ["data modification", "average calculation"],
    "constraints": "将员工ID为215的绩效评分修改为95分，再计算所有员工的绩效评分平均值，保留两位小数。",
    "format": "@avg_performance_score[value]",
    "file_name": "3-5.xlsx",
    "level": "medium"
  },
  {
    "id": 253,
    "question": "删除基本工资低于10000元的员工记录后，计算剩余员工的基本工资平均值。",
    "concepts": ["data deletion", "average calculation"],
    "constraints": "先删除基本工资低于10000元的员工记录，再计算剩余员工的基本工资平均值，保留两位小数。",
    "format": "@avg_salary_3_6[value]",
    "file_name": "3-6.xlsx",
    "level": "medium"
  },
  {
    "id": 254,
    "question": "修改员工ID为E1015的基本工资为18000元后，计算所有员工的基本工资平均值。",
    "concepts": ["data modification", "average calculation"],
    "constraints": "将员工ID为E1015的基本工资修改为18000元，再计算所有员工的基本工资平均值，保留两位小数。",
    "format": "@modified_avg_salary_3_6[value]",
    "file_name": "3-6.xlsx",
    "level": "medium"
  },
  {
    "id": 255,
    "question": "删除订单状态为'未发货'的订单记录后，计算剩余订单的订单总额平均值。",
    "concepts": ["data deletion", "average calculation"],
    "constraints": "先删除订单状态为'未发货'的订单记录，再计算剩余订单的订单总额平均值，保留两位小数。",
    "format": "@avg_order_amount_3_7[value]",
    "file_name": "3-7.xlsx",
    "level": "medium"
  },
  {
    "id": 256,
    "question": "修改订单编号为DD_240501_061的订单总额为500000元后，计算所有订单的订单总额平均值。",
    "concepts": ["data modification", "average calculation"],
    "constraints": "将订单编号为DD_240501_061的订单总额修改为500000元，再计算所有订单的订单总额平均值，保留两位小数。",
    "format": "@modified_avg_order_amount_3_7[value]",
    "file_name": "3-7.xlsx",
    "level": "medium"
  },
  {
    "id": 257,
    "question": "删除商品类别为'图书'的订单记录后，计算剩余订单的订单金额平均值。",
    "concepts": ["data deletion", "average calculation"],
    "constraints": "先删除商品类别为'图书'的订单记录，再计算剩余订单的订单金额平均值，保留两位小数。",
    "format": "@avg_order_value_3_8[value]",
    "file_name": "3-8.xlsx",
    "level": "medium"
  },
  {
    "id": 258,
    "question": "修改订单编号为EC202507040040的订单金额为6000元后，计算所有订单的订单金额平均值。",
    "concepts": ["data modification", "average calculation"],
    "constraints": "将订单编号为EC202507040040的订单金额修改为6000元，再计算所有订单的订单金额平均值，保留两位小数。",
    "format": "@modified_avg_order_value_3_8[value]",
    "file_name": "3-8.xlsx",
    "level": "medium"
  },
  {
    "id": 259,
    "question": "删除基本工资高于18000元的员工记录后，计算剩余员工的基本工资平均值。",
    "concepts": ["data deletion", "average calculation"],
    "constraints": "先删除基本工资高于18000元的员工记录，再计算剩余员工的基本工资平均值，保留两位小数。",
    "format": "@avg_salary_3_9[value]",
    "file_name": "3-9.xlsx",
    "level": "medium"
  },
  {
    "id": 260,
    "question": "修改员工ID为E1014的基本工资为18000元后，计算所有员工的基本工资平均值。",
    "concepts": ["data modification", "average calculation"],
    "constraints": "将员工ID为E1014的基本工资修改为18000元，再计算所有员工的基本工资平均值，保留两位小数。",
    "format": "@modified_avg_salary_3_9[value]",
    "file_name": "3-9.xlsx",
    "level": "medium"
  },
  {
    "id": 261,
    "question": "删除考勤状态为'缺勤'的记录后，计算剩余记录的工作时长平均值。",
    "concepts": ["data deletion", "average calculation"],
    "constraints": "先删除考勤状态为'缺勤'的记录，再计算剩余记录的工作时长平均值（以小时表示），保留两位小数。",
    "format": "@avg_work_hours[value]",
    "file_name": "4-2.xlsx",
    "level": "medium"
  },
  {
    "id": 262,
    "question": "修改员工ID为E1015的下班时间为17:30后，计算所有记录的工作时长平均值。",
    "concepts": ["data modification", "average calculation"],
    "constraints": "将员工ID为E1015的下班时间修改为17:30，再计算所有记录的工作时长平均值（以小时表示），保留两位小数。",
    "format": "@modified_avg_work_hours[value]",
    "file_name": "4-2.xlsx",
    "level": "medium"
  },
  {
    "id": 263,
    "question": "删除订单金额低于5000元的订单记录后，计算剩余订单的订单金额平均值。",
    "concepts": ["data deletion", "average calculation"],
    "constraints": "先删除订单金额低于5000元的订单记录，再计算剩余订单的订单金额平均值，保留两位小数。",
    "format": "@avg_order_amount_4_3[value]",
    "file_name": "4-3.xlsx",
    "level": "medium"
  },
  {
    "id": 264,
    "question": "修改订单编号为EC202507040040的订单金额为6000元后，计算所有订单的订单金额平均值。",
    "concepts": ["data modification", "average calculation"],
    "constraints": "将订单编号为EC202507040040的订单金额修改为6000元，再计算所有订单的订单金额平均值，保留两位小数。",
    "format": "@modified_avg_order_amount_4_3[value]",
    "file_name": "4-3.xlsx",
    "level": "medium"
  },
  {
    "id": 265,
    "question": "删除基本工资高于18000元的员工记录后，计算剩余员工的基本工资平均值。",
    "concepts": ["data deletion", "average calculation"],
    "constraints": "先删除基本工资高于18000元的员工记录，再计算剩余员工的基本工资平均值，保留两位小数。",
    "format": "@avg_salary_4_4[value]",
    "file_name": "4-4.xlsx",
    "level": "medium"
  },
  {
    "id": 266,
    "question": "修改员工ID为E1014的基本工资为18000元后，计算所有员工的基本工资平均值。",
    "concepts": ["data modification", "average calculation"],
    "constraints": "将员工ID为E1014的基本工资修改为18000元，再计算所有员工的基本工资平均值，保留两位小数。",
    "format": "@modified_avg_salary_4_4[value]",
    "file_name": "4-4.xlsx",
    "level": "medium"
  },
  {
    "id": 267,
    "question": "删除总薪酬低于15000元的员工记录后，计算剩余员工的总薪酬平均值。",
    "concepts": ["data deletion", "average calculation"],
    "constraints": "先删除总薪酬低于15000元的员工记录，再计算剩余员工的总薪酬平均值，保留两位小数。",
    "format": "@avg_total_compensation_4_5[value]",
    "file_name": "4-5.xlsx",
    "level": "medium"
  },
  {
    "id": 268,
    "question": "修改员工ID为215的绩效评分为95分后，计算所有员工的绩效评分平均值。",
    "concepts": ["data modification", "average calculation"],
    "constraints": "将员工ID为215的绩效评分修改为95分，再计算所有员工的绩效评分平均值，保留两位小数。",
    "format": "@modified_avg_performance_score_4_5[value]",
    "file_name": "4-5.xlsx",
    "level": "medium"
  },
  {
    "id": 269,
    "question": "删除互动率低于10%的内容记录后，计算剩余内容的平均互动率。",
    "concepts": ["data deletion", "average calculation"],
    "constraints": "先删除互动率低于10%的内容记录，再计算剩余内容的平均互动率，保留两位小数。",
    "format": "@avg_engagement_rate_4_7[value]",
    "file_name": "4-7.xlsx",
    "level": "medium"
  },
  {
    "id": 270,
    "question": "修改内容ID为'CM5351920'的点赞数为10000后，计算所有内容的平均点赞数。",
    "concepts": ["data modification", "average calculation"],
    "constraints": "将内容ID为'CM5351920'的点赞数修改为10000，再计算所有内容的平均点赞数，保留两位小数。",
    "format": "@modified_avg_likes_4_7[value]",
    "file_name": "4-7.xlsx",
    "level": "medium"
  },
  {
    "id": 271,
    "question": "删除订单金额低于5000元的订单记录后，计算剩余订单的订单金额平均值。",
    "concepts": ["data deletion", "average calculation"],
    "constraints": "先删除订单金额低于5000元的订单记录，再计算剩余订单的订单金额平均值，保留两位小数。",
    "format": "@avg_order_amount_4_9[value]",
    "file_name": "4-9.xlsx",
    "level": "medium"
  },
  {
    "id": 272,
    "question": "修改订单ID为'ORD1045'的订单金额为1000元后，计算所有订单的订单金额平均值。",
    "concepts": ["data modification", "average calculation"],
    "constraints": "将订单ID为'ORD1045'的订单金额修改为1000元，再计算所有订单的订单金额平均值，保留两位小数。",
    "format": "@modified_avg_order_amount_4_9[value]",
    "file_name": "4-9.xlsx",
    "level": "medium"
  },
  {
    "id": 273,
    "question": "删除点赞数低于5000的内容记录后，计算剩余内容的平均点赞数。",
    "concepts": ["data deletion", "average calculation"],
    "constraints": "先删除点赞数低于5000的内容记录，再计算剩余内容的平均点赞数，保留两位小数。",
    "format": "@avg_likes_count_5_1[value]",
    "file_name": "5-1.xlsx",
    "level": "medium"
  },
  {
    "id": 274,
    "question": "修改内容ID为'CM8483394'的评论数为2000后，计算所有内容的平均评论数。",
    "concepts": ["data modification", "average calculation"],
    "constraints": "将内容ID为'CM8483394'的评论数修改为2000，再计算所有内容的平均评论数，保留两位小数。",
    "format": "@modified_avg_comments_5_1[value]",
    "file_name": "5-1.xlsx",
    "level": "medium"
  },
  {
    "id": 275,
    "question": "删除基本工资高于18000元的员工记录后，计算剩余员工的基本工资平均值。",
    "concepts": ["data deletion", "average calculation"],
    "constraints": "先删除基本工资高于18000元的员工记录，再计算剩余员工的基本工资平均值，保留两位小数。",
    "format": "@avg_salary_4_6[value]",
    "file_name": "4-6.xlsx",
    "level": "medium"
  },
  {
    "id": 276,
    "question": "修改员工ID为'E1014'的基本工资为18000元后，计算所有员工的基本工资平均值。",
    "concepts": ["data modification", "average calculation"],
    "constraints": "将员工ID为'E1014'的基本工资修改为18000元，再计算所有员工的基本工资平均值，保留两位小数。",
    "format": "@modified_avg_salary_4_6[value]",
    "file_name": "4-6.xlsx",
    "level": "medium"
  },
  {
    "id": 277,
    "question": "删除观看数低于50000次的内容记录后，计算剩余内容的平均观看数。",
    "concepts": ["data deletion", "average calculation"],
    "constraints": "先删除观看数低于50000次的内容记录，再计算剩余内容的平均观看数，保留两位小数。",
    "format": "@avg_views_4_8[value]",
    "file_name": "4-8.xlsx",
    "level": "medium"
  },
  {
    "id": 278,
    "question": "修改内容ID为'CM4191489'的分享数为2000后，计算所有内容的平均分享数。",
    "concepts": ["data modification", "average calculation"],
    "constraints": "将内容ID为'CM4191489'的分享数修改为2000，再计算所有内容的平均分享数，保留两位小数。",
    "format": "@modified_avg_shares_4_8[value]",
    "file_name": "4-8.xlsx",
    "level": "medium"
  }
]
